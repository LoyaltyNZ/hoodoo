var search_data = {"index":{"searchIndex":["apitools","auth","platformauth","data","documentedarray","documenteddsl","documentedhash","documentedobject","documentedpresenter","commonfields","resources","account","balance","currency","errors","involvement","member","outlet","participant","product","programme","purchase","token","version","voucher","types","basket","basketitem","calculatorcommon","calculatorconfiguration","currency","currencyamount","currencyearner","errorprimitive","product","voucherearner","errordescriptions","domaindescriptions","errors","missingreferencedata","unknowncode","events","platformevent","generator","jsonerrors","jsonpayload","logger","platformcontext","platformerrors","presenters","array","basedsl","basepresenter","boolean","date","datetime","decimal","enum","field","float","hash","integer","object","string","tags","text","uuid","serviceapplication","servicecontext","serviceimplementation","serviceinterface","tolist","tolistdsl","servicemiddleware","serviceendpoint","serviceregistrydrbserver","servicerequest","serviceresponse","servicesession","stringinquirer","threadsafehash","uuid","utilities","rack","server","[]()","[]=()","actions()","add()","add_error()","add_error()","add_error()","add_errors()","add_header()","add_precompiled_error()","add_precompiled_error()","array()","array()","boolean()","call()","call()","check_platform_context()","clear_errors()","clear_errors()","component_interfaces()","component_interfaces()","comprised_of()","create()","create()","date()","datetime()","debug()","decimal()","default()","default_sort_direction()","delete()","delete()","delete()","describe()","embeds()","endpoint()","enum()","environment()","error()","error()","errors_for()","errors_for()","fail_forbidden()","fail_not_found()","fail_unauthorized()","fail_with_error()","fail_with_errors()","filter()","find()","float()","for_rack()","full_path()","generate()","get_header()","get_schema()","get_session()","halt_processing?()","has_all_roles?()","has_any_roles?()","has_default?()","has_errors?()","has_errors?()","has_key?()","has_memcache?()","has_role?()","hash()","hash()","headers()","info()","integer()","inter_service()","inter_service_local()","inter_service_remote()","interface()","interface()","internationalised()","is_internationalised?()","is_internationalised?()","key()","key()","keys()","keys()","level()","level=()","limit()","list()","list()","load_session()","local_service_for()","logger()","logger=()","merge!()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","object()","object()","on_queue?()","platform_context_prefix()","process_json_payload()","publish_event()","read_at_path()","recognised?()","record_host_and_port()","remote_service_for()","rename()","render()","render()","render()","render()","render()","render()","render()","resource()","resource()","rewrite_path()","run!()","schema()","schema()","schema_definition()","search()","show()","show()","sort()","store!()","string()","stringify()","symbolize()","tags()","testing()","text()","to_create()","to_integer?()","to_list()","to_update()","touch_session()","type()","unjoin_and_unescape_commas()","update()","update()","update_same_as_create()","uri_path_components=()","uuid()","valid?()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","version()","warn()","readme"],"longSearchIndex":["apitools","apitools::auth","apitools::auth::platformauth","apitools::data","apitools::data::documentedarray","apitools::data::documenteddsl","apitools::data::documentedhash","apitools::data::documentedobject","apitools::data::documentedpresenter","apitools::data::documentedpresenter::commonfields","apitools::data::resources","apitools::data::resources::account","apitools::data::resources::balance","apitools::data::resources::currency","apitools::data::resources::errors","apitools::data::resources::involvement","apitools::data::resources::member","apitools::data::resources::outlet","apitools::data::resources::participant","apitools::data::resources::product","apitools::data::resources::programme","apitools::data::resources::purchase","apitools::data::resources::token","apitools::data::resources::version","apitools::data::resources::voucher","apitools::data::types","apitools::data::types::basket","apitools::data::types::basketitem","apitools::data::types::calculatorcommon","apitools::data::types::calculatorconfiguration","apitools::data::types::currency","apitools::data::types::currencyamount","apitools::data::types::currencyearner","apitools::data::types::errorprimitive","apitools::data::types::product","apitools::data::types::voucherearner","apitools::errordescriptions","apitools::errordescriptions::domaindescriptions","apitools::errors","apitools::errors::missingreferencedata","apitools::errors::unknowncode","apitools::events","apitools::events::platformevent","apitools::generator","apitools::jsonerrors","apitools::jsonpayload","apitools::logger","apitools::platformcontext","apitools::platformerrors","apitools::presenters","apitools::presenters::array","apitools::presenters::basedsl","apitools::presenters::basepresenter","apitools::presenters::boolean","apitools::presenters::date","apitools::presenters::datetime","apitools::presenters::decimal","apitools::presenters::enum","apitools::presenters::field","apitools::presenters::float","apitools::presenters::hash","apitools::presenters::integer","apitools::presenters::object","apitools::presenters::string","apitools::presenters::tags","apitools::presenters::text","apitools::presenters::uuid","apitools::serviceapplication","apitools::servicecontext","apitools::serviceimplementation","apitools::serviceinterface","apitools::serviceinterface::tolist","apitools::serviceinterface::tolistdsl","apitools::servicemiddleware","apitools::servicemiddleware::serviceendpoint","apitools::servicemiddleware::serviceregistrydrbserver","apitools::servicerequest","apitools::serviceresponse","apitools::servicesession","apitools::stringinquirer","apitools::threadsafehash","apitools::uuid","apitools::utilities","rack","rack::server","apitools::threadsafehash#[]()","apitools::threadsafehash#[]=()","apitools::serviceinterface#actions()","apitools::servicemiddleware::serviceregistrydrbserver#add()","apitools::errors#add_error()","apitools::platformerrors#add_error()","apitools::serviceresponse#add_error()","apitools::serviceresponse#add_errors()","apitools::serviceresponse#add_header()","apitools::errors#add_precompiled_error()","apitools::serviceresponse#add_precompiled_error()","apitools::data::documenteddsl#array()","apitools::presenters::basedsl#array()","apitools::presenters::basedsl#boolean()","apitools::serviceapplication#call()","apitools::servicemiddleware#call()","apitools::platformcontext#check_platform_context()","apitools::errors#clear_errors()","apitools::platformerrors#clear_errors()","apitools::serviceapplication::component_interfaces()","apitools::serviceapplication#component_interfaces()","apitools::serviceapplication::comprised_of()","apitools::serviceimplementation#create()","apitools::servicemiddleware::serviceendpoint#create()","apitools::presenters::basedsl#date()","apitools::presenters::basedsl#datetime()","apitools::logger::debug()","apitools::presenters::basedsl#decimal()","apitools::serviceinterface::tolistdsl#default()","apitools::serviceinterface::tolist#default_sort_direction()","apitools::serviceimplementation#delete()","apitools::servicemiddleware::serviceendpoint#delete()","apitools::threadsafehash#delete()","apitools::errordescriptions#describe()","apitools::serviceinterface#embeds()","apitools::serviceinterface#endpoint()","apitools::presenters::basedsl#enum()","apitools::servicemiddleware::environment()","apitools::errordescriptions::domaindescriptions#error()","apitools::logger::error()","apitools::errordescriptions#errors_for()","apitools::serviceinterface#errors_for()","apitools::jsonerrors#fail_forbidden()","apitools::jsonerrors#fail_not_found()","apitools::jsonerrors#fail_unauthorized()","apitools::jsonerrors#fail_with_error()","apitools::jsonerrors#fail_with_errors()","apitools::serviceinterface::tolistdsl#filter()","apitools::servicemiddleware::serviceregistrydrbserver#find()","apitools::presenters::basedsl#float()","apitools::serviceresponse#for_rack()","apitools::presenters::field#full_path()","apitools::uuid::generate()","apitools::serviceresponse#get_header()","apitools::presenters::basepresenter::get_schema()","apitools::auth::platformauth::get_session()","apitools::serviceresponse#halt_processing?()","apitools::servicesession#has_all_roles?()","apitools::servicesession#has_any_roles?()","apitools::presenters::field#has_default?()","apitools::errors#has_errors?()","apitools::platformerrors#has_errors?()","apitools::threadsafehash#has_key?()","apitools::servicemiddleware::has_memcache?()","apitools::servicesession#has_role?()","apitools::data::documenteddsl#hash()","apitools::presenters::basedsl#hash()","apitools::serviceresponse#headers()","apitools::logger::info()","apitools::presenters::basedsl#integer()","apitools::servicemiddleware#inter_service()","apitools::servicemiddleware#inter_service_local()","apitools::servicemiddleware#inter_service_remote()","apitools::serviceinterface::interface()","apitools::servicemiddleware::serviceendpoint#interface()","apitools::data::documenteddsl#internationalised()","apitools::data::documenteddsl#is_internationalised?()","apitools::data::documentedpresenter::is_internationalised?()","apitools::data::documentedhash#key()","apitools::presenters::hash#key()","apitools::data::documentedhash#keys()","apitools::presenters::hash#keys()","apitools::logger::level()","apitools::logger::level=()","apitools::serviceinterface::tolistdsl#limit()","apitools::serviceimplementation#list()","apitools::servicemiddleware::serviceendpoint#list()","apitools::servicesession::load_session()","apitools::servicemiddleware#local_service_for()","apitools::logger::logger()","apitools::logger::logger=()","apitools::errors#merge!()","apitools::data::documentedobject::new()","apitools::errordescriptions::new()","apitools::errordescriptions::domaindescriptions::new()","apitools::errors::new()","apitools::presenters::decimal::new()","apitools::presenters::enum::new()","apitools::presenters::field::new()","apitools::presenters::object::new()","apitools::presenters::string::new()","apitools::presenters::uuid::new()","apitools::servicecontext::new()","apitools::serviceinterface::tolist::new()","apitools::serviceinterface::tolistdsl::new()","apitools::servicemiddleware::new()","apitools::servicemiddleware::serviceendpoint::new()","apitools::servicemiddleware::serviceregistrydrbserver::new()","apitools::servicerequest::new()","apitools::serviceresponse::new()","apitools::servicesession::new()","apitools::threadsafehash::new()","apitools::data::documenteddsl#object()","apitools::presenters::basedsl#object()","apitools::servicemiddleware::on_queue?()","apitools::platformcontext#platform_context_prefix()","apitools::jsonpayload#process_json_payload()","apitools::events::platformevent::publish_event()","apitools::presenters::field#read_at_path()","apitools::errordescriptions#recognised?()","apitools::servicemiddleware::record_host_and_port()","apitools::servicemiddleware#remote_service_for()","apitools::presenters::field#rename()","apitools::data::documentedpresenter::render()","apitools::errors#render()","apitools::presenters::array#render()","apitools::presenters::basepresenter::render()","apitools::presenters::field#render()","apitools::presenters::hash#render()","apitools::presenters::object#render()","apitools::data::documenteddsl#resource()","apitools::servicecontext#resource()","apitools::presenters::field#rewrite_path()","apitools::generator#run!()","apitools::data::documentedpresenter::schema()","apitools::presenters::basepresenter::schema()","apitools::data::documentedpresenter::schema_definition()","apitools::serviceinterface::tolistdsl#search()","apitools::serviceimplementation#show()","apitools::servicemiddleware::serviceendpoint#show()","apitools::serviceinterface::tolistdsl#sort()","apitools::errors#store!()","apitools::presenters::basedsl#string()","apitools::utilities::stringify()","apitools::utilities::symbolize()","apitools::presenters::basedsl#tags()","apitools::servicesession::testing()","apitools::presenters::basedsl#text()","apitools::serviceinterface#to_create()","apitools::utilities::to_integer?()","apitools::serviceinterface#to_list()","apitools::serviceinterface#to_update()","apitools::auth::platformauth::touch_session()","apitools::data::documenteddsl#type()","apitools::errors#unjoin_and_unescape_commas()","apitools::serviceimplementation#update()","apitools::servicemiddleware::serviceendpoint#update()","apitools::serviceinterface#update_same_as_create()","apitools::servicerequest#uri_path_components=()","apitools::presenters::basedsl#uuid()","apitools::uuid::valid?()","apitools::data::documentedpresenter::validate()","apitools::presenters::array#validate()","apitools::presenters::basepresenter::validate()","apitools::presenters::boolean#validate()","apitools::presenters::date#validate()","apitools::presenters::datetime#validate()","apitools::presenters::decimal#validate()","apitools::presenters::enum#validate()","apitools::presenters::field#validate()","apitools::presenters::float#validate()","apitools::presenters::hash#validate()","apitools::presenters::integer#validate()","apitools::presenters::object#validate()","apitools::presenters::string#validate()","apitools::presenters::text#validate()","apitools::presenters::uuid#validate()","apitools::serviceinterface#version()","apitools::logger::warn()",""],"info":[["ApiTools","","ApiTools.html","","<p>File &mdash; documented_array.rb\n<p>(C) &mdash; Loyalty New Zealand 2014\n<p>Purpose &mdash; ApiTools::Data::DocumentedObject DSL field …\n"],["ApiTools::Auth","","ApiTools/Auth.html","",""],["ApiTools::Auth::PlatformAuth","","ApiTools/Auth/PlatformAuth.html","","<p>Needs: CONFIG =&gt; {\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;auth_service_uri&#39;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;http://auth.service.consul&#39;</span>,\n<span class=\"ruby-string\">&#39;session_secret&#39;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;q87324f9cns8ebc7qg3dh&#39;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ApiTools::Data","","ApiTools/Data.html","","<p>Common data definitions and descriptions - describe, through a DSL, the\n<strong>representations</strong> of Types and …\n"],["ApiTools::Data::DocumentedArray","","ApiTools/Data/DocumentedArray.html","","<p>As ApiTools::Presenters::Array but providing extended DSL facilities for\nthe Platform API documented …\n"],["ApiTools::Data::DocumentedDSL","","ApiTools/Data/DocumentedDSL.html","","<p>Analogous to ApiTools::Presenters::BaseDSL, but holds the documented data\ntype and resource DSL extensions …\n"],["ApiTools::Data::DocumentedHash","","ApiTools/Data/DocumentedHash.html","","<p>As ApiTools::Presenters::Hash but providing extended DSL facilities for the\nPlatform API documented  …\n"],["ApiTools::Data::DocumentedObject","","ApiTools/Data/DocumentedObject.html","","<p>Extends the schema description DSL provided by ApiTools::Presenters::Object\nwith extra methods which …\n"],["ApiTools::Data::DocumentedPresenter","","ApiTools/Data/DocumentedPresenter.html","","<p>Base class for predefined Type and Resource definitions that inherit the\nApiTools::Presenters::BasePresenter …\n"],["ApiTools::Data::DocumentedPresenter::CommonFields","","ApiTools/Data/DocumentedPresenter/CommonFields.html","","<p>Used internally for additional validation of common Resource fields. See\nApiTools::Data::DocumentedPresenter::validate …\n"],["ApiTools::Data::Resources","","ApiTools/Data/Resources.html","","<p>Module used as a namespace to collect classes that represent Resources\ndocumented by the your platform&#39;s …\n"],["ApiTools::Data::Resources::Account","","ApiTools/Data/Resources/Account.html","","<p>Documented Platform API Resource &#39;Account&#39;.\n"],["ApiTools::Data::Resources::Balance","","ApiTools/Data/Resources/Balance.html","","<p>Documented Platform API Resource &#39;Balance&#39;.\n"],["ApiTools::Data::Resources::Currency","","ApiTools/Data/Resources/Currency.html","","<p>Documented Platform API Resource &#39;Currency&#39;.\n"],["ApiTools::Data::Resources::Errors","","ApiTools/Data/Resources/Errors.html","","<p>Documented Platform API Resource &#39;Errors&#39;.\n"],["ApiTools::Data::Resources::Involvement","","ApiTools/Data/Resources/Involvement.html","","<p>Documented Platform API Resource &#39;Involvement&#39;.\n"],["ApiTools::Data::Resources::Member","","ApiTools/Data/Resources/Member.html","","\n<pre class=\"ruby\"><span class=\"ruby-constant\">Since</span> <span class=\"ruby-constant\">Member</span> <span class=\"ruby-identifier\">references</span> <span class=\"ruby-constant\">Account</span> <span class=\"ruby-keyword\">and</span> <span class=\"ruby-constant\">Account</span> <span class=\"ruby-identifier\">references</span> <span class=\"ruby-constant\">Member</span>, <span class=\"ruby-identifier\">we</span> <span class=\"ruby-identifier\">have</span>\n<span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">define</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">dummy</span> <span class=\"ruby-constant\">Member</span> <span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ApiTools::Data::Resources::Outlet","","ApiTools/Data/Resources/Outlet.html","","<p>Documented Platform API Resource &#39;Outlet&#39;.\n"],["ApiTools::Data::Resources::Participant","","ApiTools/Data/Resources/Participant.html","","<p>Documented Platform API Resource &#39;Participant&#39;.\n"],["ApiTools::Data::Resources::Product","","ApiTools/Data/Resources/Product.html","","<p>Documented Platform API Resource &#39;Product&#39;.\n"],["ApiTools::Data::Resources::Programme","","ApiTools/Data/Resources/Programme.html","","<p>Documented Platform API Resource &#39;Programme&#39;.\n"],["ApiTools::Data::Resources::Purchase","","ApiTools/Data/Resources/Purchase.html","","<p>Documented Platform API Resource &#39;Purchase&#39;.\n"],["ApiTools::Data::Resources::Token","","ApiTools/Data/Resources/Token.html","","<p>Documented Platform API Resource &#39;Token&#39;.\n"],["ApiTools::Data::Resources::Version","","ApiTools/Data/Resources/Version.html","","<p>Documented Platform API Resource &#39;Version&#39;.\n"],["ApiTools::Data::Resources::Voucher","","ApiTools/Data/Resources/Voucher.html","","<p>Documented Platform API Resource &#39;Voucher&#39;.\n"],["ApiTools::Data::Types","","ApiTools/Data/Types.html","","<p>Module used as a namespace to collect classes that represent Types\ndocumented by your platform&#39;s …\n"],["ApiTools::Data::Types::Basket","","ApiTools/Data/Types/Basket.html","","<p>Documented Platform API Type &#39;Basket&#39;.\n"],["ApiTools::Data::Types::BasketItem","","ApiTools/Data/Types/BasketItem.html","","<p>Documented Platform API Type &#39;BasketItem&#39;.\n"],["ApiTools::Data::Types::CalculatorCommon","","ApiTools/Data/Types/CalculatorCommon.html","","<p>Documented Platform API Type &#39;CalculatorCommon&#39;.\n"],["ApiTools::Data::Types::CalculatorConfiguration","","ApiTools/Data/Types/CalculatorConfiguration.html","","<p>Documented Platform API Type &#39;CalculatorConfiguration&#39;.\n"],["ApiTools::Data::Types::Currency","","ApiTools/Data/Types/Currency.html","","<p>Documented Platform API Type &#39;Currency&#39;.\n"],["ApiTools::Data::Types::CurrencyAmount","","ApiTools/Data/Types/CurrencyAmount.html","","<p>Documented Platform API Type &#39;CurrencyAmount&#39;.\n"],["ApiTools::Data::Types::CurrencyEarner","","ApiTools/Data/Types/CurrencyEarner.html","","<p>Documented Platform API Type &#39;CurrencyEarner&#39;.\n"],["ApiTools::Data::Types::ErrorPrimitive","","ApiTools/Data/Types/ErrorPrimitive.html","","<p>Documented Platform API Type &#39;ErrorPrimitive&#39;.\n"],["ApiTools::Data::Types::Product","","ApiTools/Data/Types/Product.html","","<p>Documented Platform API Type &#39;Product&#39;.\n"],["ApiTools::Data::Types::VoucherEarner","","ApiTools/Data/Types/VoucherEarner.html","","<p>Documented Platform API Type &#39;VoucherEarner&#39;.\n"],["ApiTools::ErrorDescriptions","","ApiTools/ErrorDescriptions.html","","<p>A collection of error descriptions. API service implementations create one\nof these, which self-declares …\n"],["ApiTools::ErrorDescriptions::DomainDescriptions","","ApiTools/ErrorDescriptions/DomainDescriptions.html","","<p>Contain a description of errors for a particular domain, where the domain\nis a grouping string such as …\n"],["ApiTools::Errors","","ApiTools/Errors.html","","<p>During request processing, API service implementations create an\nApiTools::Errors instance and add error(s) …\n"],["ApiTools::Errors::MissingReferenceData","","ApiTools/Errors/MissingReferenceData.html","","<p>Custom exception thrown when an error is added to a collection without\nincluding required reference data …\n"],["ApiTools::Errors::UnknownCode","","ApiTools/Errors/UnknownCode.html","","<p>Custom exception thrown when an unknown error code is added to a\ncollection.\n"],["ApiTools::Events","","ApiTools/Events.html","",""],["ApiTools::Events::PlatformEvent","","ApiTools/Events/PlatformEvent.html","",""],["ApiTools::Generator","","ApiTools/Generator.html","",""],["ApiTools::JsonErrors","","ApiTools/JsonErrors.html","","<p>A module intended as a sinatra extension, providing standard error\nfunctionality for Platform APIs.  …\n"],["ApiTools::JsonPayload","","ApiTools/JsonPayload.html","","<p>A module intended as a sinatra extension, providing standard JSON parsing\nto the `@payload` instance …\n"],["ApiTools::Logger","","ApiTools/Logger.html","","<p>A class intended as a standardised API/service logger. The class acts as a\nproxy; an external logger …\n"],["ApiTools::PlatformContext","","ApiTools/PlatformContext.html","","<p>A module intended as a sinatra extension, providing standard platform\ncontext to  the API.\n"],["ApiTools::PlatformErrors","","ApiTools/PlatformErrors.html","","<p>A module intended as a generic error handler for an instance of a class. \nProvides multiple error capability …\n"],["ApiTools::Presenters","","ApiTools/Presenters.html","",""],["ApiTools::Presenters::Array","","ApiTools/Presenters/Array.html","","<p>A JSON array schema member\n"],["ApiTools::Presenters::BaseDSL","","ApiTools/Presenters/BaseDSL.html","","<p>A mixin to be used by any presenter that wants to support the\nApiTools::Presenters family of schema  …\n"],["ApiTools::Presenters::BasePresenter","","ApiTools/Presenters/BasePresenter.html","","<p>Base functionality for JSON validation and presenter (rendering) layers.\nSubclass this to define a schema …\n"],["ApiTools::Presenters::Boolean","","ApiTools/Presenters/Boolean.html","","<p>A JSON boolean schema member\n"],["ApiTools::Presenters::Date","","ApiTools/Presenters/Date.html","","<p>A JSON date schema member\n"],["ApiTools::Presenters::DateTime","","ApiTools/Presenters/DateTime.html","","<p>A JSON datetime schema member\n"],["ApiTools::Presenters::Decimal","","ApiTools/Presenters/Decimal.html","","<p>A JSON decimal schema member\n"],["ApiTools::Presenters::Enum","","ApiTools/Presenters/Enum.html","","<p>A JSON string schema member. An enumeration (of sorts) - a list of discrete\nstring values that are permitted …\n"],["ApiTools::Presenters::Field","","ApiTools/Presenters/Field.html","","<p>A JSON schema member\n"],["ApiTools::Presenters::Float","","ApiTools/Presenters/Float.html","","<p>A JSON float schema member\n"],["ApiTools::Presenters::Hash","","ApiTools/Presenters/Hash.html","","<p>A JSON hash schema member\n"],["ApiTools::Presenters::Integer","","ApiTools/Presenters/Integer.html","","<p>A JSON integer schema member\n"],["ApiTools::Presenters::Object","","ApiTools/Presenters/Object.html","","<p>A JSON object schema member\n"],["ApiTools::Presenters::String","","ApiTools/Presenters/String.html","","<p>A JSON string schema member\n"],["ApiTools::Presenters::Tags","","ApiTools/Presenters/Tags.html","","<p>A JSON UUID schema member\n"],["ApiTools::Presenters::Text","","ApiTools/Presenters/Text.html","","<p>A JSON string schema member - unlimited length string\n"],["ApiTools::Presenters::UUID","","ApiTools/Presenters/UUID.html","","<p>A JSON UUID schema member\n"],["ApiTools::ServiceApplication","","ApiTools/ServiceApplication.html","","<p>ApiTools::ServiceApplication is subclassed by people writing service\nimplementations; the subclasses …\n"],["ApiTools::ServiceContext","","ApiTools/ServiceContext.html","","<p>A collection of objects which describe the context in which a service is\nbeing called. The service reads …\n"],["ApiTools::ServiceImplementation","","ApiTools/ServiceImplementation.html","","<p>Service authors subclass this to produce the body of their service\ninterface implementation. It defines …\n"],["ApiTools::ServiceInterface","","ApiTools/ServiceInterface.html","","<p>Service implementation authors subclass this to describe the interface that\nthey implement for a particular …\n"],["ApiTools::ServiceInterface::ToList","","ApiTools/ServiceInterface/ToList.html","","<p>A class containing a series of accessors that describe allowed parameters\nin a “list” call …\n"],["ApiTools::ServiceInterface::ToListDSL","","ApiTools/ServiceInterface/ToListDSL.html","","<p>Implementation of the DSL that&#39;s written inside a block passed to\nApiTools::ServiceInterface#to_list …\n"],["ApiTools::ServiceMiddleware","","ApiTools/ServiceMiddleware.html","","<p>Rack middleware, declared in (e.g.) a <code>config.ru</code> file in the\nusual way:\n\n<pre>use( ApiTools::ServiceMiddleware ...</pre>\n"],["ApiTools::ServiceMiddleware::ServiceEndpoint","","ApiTools/ServiceMiddleware/ServiceEndpoint.html","","<p>Representation of a callable service endpoint for a specific resource.\nServices that wish to call other …\n"],["ApiTools::ServiceMiddleware::ServiceRegistryDRbServer","","ApiTools/ServiceMiddleware/ServiceRegistryDRbServer.html","","<p>A registry of service endpoints, implenented as a DRB server class. An\ninternal implementation detail …\n"],["ApiTools::ServiceRequest","","ApiTools/ServiceRequest.html","","<p>Instances of the ApiTools::ServiceRequest class are passed to service\ninterface implementations when …\n"],["ApiTools::ServiceResponse","","ApiTools/ServiceResponse.html","","<p>The service middleware creates an ApiTools::ServiceResponse instance for\neach request it handles, populating …\n"],["ApiTools::ServiceSession","","ApiTools/ServiceSession.html","","<p><code>ServiceSession</code> contains all functionality related to a context\nsession.\n"],["ApiTools::StringInquirer","","ApiTools/StringInquirer.html","","<p>Given a string, provides an object that takes the string&#39;s value and\nturns it into a method “#{value}?”, …\n"],["ApiTools::ThreadSafeHash","","ApiTools/ThreadSafeHash.html","",""],["ApiTools::UUID","","ApiTools/UUID.html","","<p>Class that handles generation and validation of UUIDs. Whenever you want to\nassociate an identifier with …\n"],["ApiTools::Utilities","","ApiTools/Utilities.html","","<p>Useful tools, especially for those working without Rails components.\n"],["Rack","","Rack.html","",""],["Rack::Server","","Rack/Server.html","",""],["[]","ApiTools::ThreadSafeHash","ApiTools/ThreadSafeHash.html#method-i-5B-5D","(index)",""],["[]=","ApiTools::ThreadSafeHash","ApiTools/ThreadSafeHash.html#method-i-5B-5D-3D","(index,value)",""],["actions","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-actions","( *supported_actions )","<p>List the actions that the service implementation supports. If you don&#39;t\ncall this, the middleware …\n"],["add","ApiTools::ServiceMiddleware::ServiceRegistryDRbServer","ApiTools/ServiceMiddleware/ServiceRegistryDRbServer.html#method-i-add","( resource, version, uri )","<p>Add an endpoint to the list.\n<p>resource &mdash; Resource as a String or Symbol, e.g. “Product”\n<p>version … &mdash; "],["add_error","ApiTools::Errors","ApiTools/Errors.html#method-i-add_error","( code, options = nil )","<p>Add an error instance to this collection.\n<p>code &mdash; Error code in full, e.g. +generic.invalid_state&#39;.\n<p>options … &mdash; "],["add_error","ApiTools::PlatformErrors","ApiTools/PlatformErrors.html#method-i-add_error","(code, message, reference = nil)","<p>Add an error with the specified `code`, `message`, and optionally\n`reference`  to the error list.\n"],["add_error","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-add_error","( code, options = nil )","<p>Add an error to the internal collection. Passes input parameters through to\nApiTools::Errors#add_error …\n"],["add_errors","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-add_errors","( errors_object )","<p>Add errors from an ApiTools::Errors instance to this response&#39;s error\ncollection.\n<p>errors_object &mdash; ApiTools::Errors …\n\n"],["add_header","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-add_header","( name, value, overwrite = false )","<p>Add an HTTP header to the internal collection that will be used for the\nresponse. Trying to set data …\n"],["add_precompiled_error","ApiTools::Errors","ApiTools/Errors.html#method-i-add_precompiled_error","( code, message, reference, http_status = 500 )","<p>Add a precompiled error to the error collection. Pass error code, error\nmessage and reference data directly. …\n"],["add_precompiled_error","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-add_precompiled_error","( code, message, reference, http_status = 500 )","<p>Add a precompiled error to the error collection. Pass error code, error\nmessage and reference data directly. …\n"],["array","ApiTools::Data::DocumentedDSL","ApiTools/Data/DocumentedDSL.html#method-i-array","(name, options = {}, &block)","<p>As ApiTools::Presenters::BaseDSL#array but with the extended DSL in\nApiTools::Data::DocumentedDSL available …\n"],["array","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-array","(name, options = {}, &block)","<p>Define a JSON array with the supplied name and options. If there is a block\nprovided, then more DSL calls …\n"],["boolean","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-boolean","(name, options = {})","<p>Define a JSON boolean with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["call","ApiTools::ServiceApplication","ApiTools/ServiceApplication.html#method-i-call","( env )","<p>Since service implementations are not pure Rack apps but really service\nmiddleware clients, they shouldn&#39;t …\n"],["call","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-i-call","( env )","<p>Run a Rack request, returning the [status, headers, body-array] data as per\nthe Rack protocol requirements. …\n"],["check_platform_context","ApiTools::PlatformContext","ApiTools/PlatformContext.html#method-i-check_platform_context","()","<p>Get the platform context from the `X-Subscriber-ID` and `X-Programme-ID`\nHTTP headers into the `@platform_context` …\n"],["clear_errors","ApiTools::Errors","ApiTools/Errors.html#method-i-clear_errors","()","<p>Clear (delete) all previously added errors (if any). After calling here,\n#has_errors? would always return …\n"],["clear_errors","ApiTools::PlatformErrors","ApiTools/PlatformErrors.html#method-i-clear_errors","()","<p>Clear all errors.\n"],["component_interfaces","ApiTools::ServiceApplication","ApiTools/ServiceApplication.html#method-c-component_interfaces","()","<p>Return an array of the classes that make up the interfaces for this\nservice. Each is an ApiTools::ServiceInterface …\n"],["component_interfaces","ApiTools::ServiceApplication","ApiTools/ServiceApplication.html#method-i-component_interfaces","()","<p>Instance method which calls through to ::component_interfaces and returns\nits result.\n"],["comprised_of","ApiTools::ServiceApplication","ApiTools/ServiceApplication.html#method-c-comprised_of","( *classes )","<p>Called by subclasses listing one or more ApiTools::ServiceInterface\nsubclasses that make up the service …\n"],["create","ApiTools::ServiceImplementation","ApiTools/ServiceImplementation.html#method-i-create","( context )","<p>Implement a “create” action (store one new resource instance).\n<p>context &mdash; ApiTools::ServiceContext …\n\n"],["create","ApiTools::ServiceMiddleware::ServiceEndpoint","ApiTools/ServiceMiddleware/ServiceEndpoint.html#method-i-create","( body_hash, query_hash = nil )","<p>Create a resource instance.\n<p>body_hash &mdash; See #intiialize.\n<p>query_hash &mdash; See #initialize.\n"],["date","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-date","(name, options = {})","<p>Define a JSON date with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["datetime","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-datetime","(name, options = {})","<p>Define a JSON datetime with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["debug","ApiTools::Logger","ApiTools/Logger.html#method-c-debug","(*args)","<p>Write to the DEBUG log, provided the log level is <code>:debug</code>. See\nalso ::logger=.\n<p>*args &mdash; One or more arguments …\n\n"],["decimal","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-decimal","(name, options = {})","<p>Define a JSON decimal with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["default","ApiTools::ServiceInterface::ToListDSL","ApiTools/ServiceInterface/ToListDSL.html#method-i-default","( sort_key )","<p>Used in conjunction with #sort. Specifies that a sort key should be the\ndefault sort order for the interface. …\n"],["default_sort_direction","ApiTools::ServiceInterface::ToList","ApiTools/ServiceInterface/ToList.html#method-i-default_sort_direction","()","<p>Default sort direction.\n"],["delete","ApiTools::ServiceImplementation","ApiTools/ServiceImplementation.html#method-i-delete","( context )","<p>Implement a “delete” action (delete one existing resource instance).\n<p>context &mdash; ApiTools::ServiceContext …\n\n"],["delete","ApiTools::ServiceMiddleware::ServiceEndpoint","ApiTools/ServiceMiddleware/ServiceEndpoint.html#method-i-delete","( ident, query_hash = nil )","<p>Delete a resource instance.\n<p>ident &mdash; See #intiialize.\n<p>query_hash &mdash; See #initialize.\n"],["delete","ApiTools::ThreadSafeHash","ApiTools/ThreadSafeHash.html#method-i-delete","(index)",""],["describe","ApiTools::ErrorDescriptions","ApiTools/ErrorDescriptions.html#method-i-describe","( code )","<p>Return the options description hash, as passed to <code>error</code> calls\nin the block given to #errors_for, for …\n"],["embeds","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-embeds","( *embeds )","<p>An array of supported embed keys (as per documentation, so singular or\nplural as per resource interface …\n"],["endpoint","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-endpoint","( uri_path_fragment, implementation_class )","<p>Mandatory part of the interface DSL. Declare the interface&#39;s URL\nendpoint and the ApiTools::ServiceImplementation …\n"],["enum","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-enum","(name, options = {})","<p>Define a JSON string which can only have a restricted set of exactly\nmatched values, with the supplied …\n"],["environment","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-c-environment","()","<p>Utility - returns the execution environment as a Rails-like environment\nobject which answers queries …\n"],["error","ApiTools::ErrorDescriptions::DomainDescriptions","ApiTools/ErrorDescriptions/DomainDescriptions.html#method-i-error","( name, options )","<p>Describe an error.\n<p>name &mdash; The error name - the bit after the “<code>.</code>” in the code, e.g.\n<code>invalid_parameters</code> …\n"],["error","ApiTools::Logger","ApiTools/Logger.html#method-c-error","(*args)","<p>Write to the ERROR log, regardless of logging level. See also ::logger=.\n<p>*args &mdash; One or more arguments that …\n\n"],["errors_for","ApiTools::ErrorDescriptions","ApiTools/ErrorDescriptions.html#method-i-errors_for","( domain, &block )","<p>Implement the collection&#39;s part of the small DSL used for error\ndeclaration. Call here, passing the …\n"],["errors_for","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-errors_for","( domain, &block )","<p>Declares custom errors that are part of this defined interface. This calls\ndirectly through to ApiTools::ErrorDescriptions#errors_for …\n"],["fail_forbidden","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_forbidden","()","<p>`halt` the API call immediately, returning `403 Forbidden` and rendering\nany previously added errors …\n"],["fail_not_found","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_not_found","()","<p>`halt` the API call immediately, returning `404 Not Found` and rendering\nany previously added errors …\n"],["fail_unauthorized","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_unauthorized","()","<p>`halt` the API call immediately, returning `401 Unauthorized` and rendering\nany previously added errors …\n"],["fail_with_error","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_with_error","(status, code, message, reference = nil)","<p>`halt` the API call immediately, returning the supplied HTTP `status` code,\nand render any previously …\n"],["fail_with_errors","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_with_errors","(status = 422, errors = nil)","<p>`halt` the API call immediately, returning the supplied HTTP `status` code,\nwith any previously added …\n"],["filter","ApiTools::ServiceInterface::ToListDSL","ApiTools/ServiceInterface/ToListDSL.html#method-i-filter","( *filter )","<p>As #search, but for filtering.\n<p>filter &mdash; Array of permitted filter keys, as symbols or strings. The order …\n\n"],["find","ApiTools::ServiceMiddleware::ServiceRegistryDRbServer","ApiTools/ServiceMiddleware/ServiceRegistryDRbServer.html#method-i-find","( resource, version )","<p>Find an endpoint in the list. Returns URI at which the service may be\naccessed as a String, or &#39;nil&#39; …\n"],["float","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-float","(name, options = {})","<p>Define a JSON float with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["for_rack","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-for_rack","()","<p>Convert the internal response data into something that Rack expects. The\nreturn value of this method …\n"],["full_path","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-full_path","(path)","<p>Return the full path and name of this field\n<p>path &mdash; The JSON path or nil, e.g. &#39;one.two&#39;\n\n"],["generate","ApiTools::UUID","ApiTools/UUID.html#method-c-generate","()","<p>Generate a unique identifier. Returns a 32 character string.\n"],["get_header","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-get_header","( name )","<p>Check the stored value of a given HTTP header. Checks are case insensitive.\nReturns the value stored …\n"],["get_schema","ApiTools::Presenters::BasePresenter","ApiTools/Presenters/BasePresenter.html#method-c-get_schema","()","<p>Return the schema graph.\n"],["get_session","ApiTools::Auth::PlatformAuth","ApiTools/Auth/PlatformAuth.html#method-c-get_session","(session_id)",""],["halt_processing?","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-halt_processing-3F","()","<p>Returns <code>true</code> if processing should halt, e.g. because errors\nhave been added to the errors collection. …\n"],["has_all_roles?","ApiTools::ServiceSession","ApiTools/ServiceSession.html#method-i-has_all_roles-3F","(roles)","<p>Returns true if this session has all specified roles\n"],["has_any_roles?","ApiTools::ServiceSession","ApiTools/ServiceSession.html#method-i-has_any_roles-3F","(roles)","<p>Returns true if this session has any of the specified roles\n"],["has_default?","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-has_default-3F","()","<p>Does this property have a defined default (which may be defined as\n<code>nil</code>) rather than having no defined …\n"],["has_errors?","ApiTools::Errors","ApiTools/Errors.html#method-i-has_errors-3F","()","<p>Does this instance have any errors added? Returns <code>true</code> if so,\nelse <code>false</code>.\n"],["has_errors?","ApiTools::PlatformErrors","ApiTools/PlatformErrors.html#method-i-has_errors-3F","()","<p>Return `true` if errors have been added.\n"],["has_key?","ApiTools::ThreadSafeHash","ApiTools/ThreadSafeHash.html#method-i-has_key-3F","(index)",""],["has_memcache?","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-c-has_memcache-3F","()","<p>Do we have Memcache available? If not, assume local development with higher\nlevel queue services not …\n"],["has_role?","ApiTools::ServiceSession","ApiTools/ServiceSession.html#method-i-has_role-3F","(role)","<p>Returns true if this session has the specified role\n"],["hash","ApiTools::Data::DocumentedDSL","ApiTools/Data/DocumentedDSL.html#method-i-hash","(name, options = {}, &block)","<p>As ApiTools::Presenters::BaseDSL#hash but with the extended DSL in\nApiTools::Data::DocumentedDSL available …\n"],["hash","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-hash","(name, options = {}, &block)","<p>Define a JSON object with the supplied name and optional constraints on\nproperties (like hash keys) and …\n"],["headers","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-i-headers","()","<p>Returns the list previously set headers in a name: value Hash.\n"],["info","ApiTools::Logger","ApiTools/Logger.html#method-c-info","(*args)","<p>Write to the INFO log, provided the log level is <code>:debug</code> or\n<code>:info</code>. See also ::logger=.\n<p>*args &mdash; One or more …\n\n"],["integer","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-integer","(name, options = {})","<p>Define a JSON integer with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["inter_service","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-i-inter_service","( options )","<p>Perform an inter-service call. This shouldn&#39;t be called directly; call\nvia the ApiTools::ServiceMiddleware::ServiceEndpoint …\n"],["inter_service_local","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-i-inter_service_local","( options )","<p>Make a local (non-HTTP local Ruby method call) inter-service call. Fast.\n<p>options &mdash; See #inter_service.\n<p>Returns … &mdash; "],["inter_service_remote","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-i-inter_service_remote","( options )","<p>Make a remote (HTTP) inter-service call. Slow.\n<p>options &mdash; See #inter_service.\n<p>Returns &mdash; See #inter_service. …\n"],["interface","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-c-interface","( resource, &block )","<p>Define the subclass service&#39;s interface. A DSL is used with methods\ndocumented in the ApiTools::ServiceInterfaceDSL …\n"],["interface","ApiTools::ServiceMiddleware::ServiceEndpoint","ApiTools/ServiceMiddleware/ServiceEndpoint.html#method-i-interface","()","<p>Find out the service interface class being used by this instance. If\n<code>nil</code>, the interface is remote - it …\n"],["internationalised","ApiTools::Data::DocumentedDSL","ApiTools/Data/DocumentedDSL.html#method-i-internationalised","( options = nil )","<p>Declares that this Type or Resource contains fields which will may carry\nhuman-readable data subject …\n"],["is_internationalised?","ApiTools::Data::DocumentedDSL","ApiTools/Data/DocumentedDSL.html#method-i-is_internationalised-3F","()","<p>An enquiry method related to, but not part of the DSL; returns\n<code>true</code> if the schema instance is internationalised, …\n"],["is_internationalised?","ApiTools::Data::DocumentedPresenter","ApiTools/Data/DocumentedPresenter.html#method-c-is_internationalised-3F","()","<p>Does this presenter use internationalisation?\n"],["key","ApiTools::Data::DocumentedHash","ApiTools/Data/DocumentedHash.html#method-i-key","(name, options = {}, &block)","<p>See ApiTools::Presenters::Hash for details. This subclass method checks for\ninternationalisation in defined …\n"],["key","ApiTools::Presenters::Hash","ApiTools/Presenters/Hash.html#method-i-key","(name, options = {}, &block)","<p>Hash DSL: Define a specific named key that is allowed (or even required) in\nthe hash. The optional block …\n"],["keys","ApiTools::Data::DocumentedHash","ApiTools/Data/DocumentedHash.html#method-i-keys","(options = {}, &block)","<p>See ApiTools::Presenters::Hash for details. This subclass method checks for\ninternationalisation in defined …\n"],["keys","ApiTools::Presenters::Hash","ApiTools/Presenters/Hash.html#method-i-keys","(options = {}, &block)","<p>Hash DSL: Define general parameters allowed for keys in a Hash and, if a\nblock is given, use ApiTools::Presenters::BaseDSL …\n"],["level","ApiTools::Logger","ApiTools/Logger.html#method-c-level","()","<p>Return the current log level. This is <code>:debug</code> by default. See\nalso ::level=.\n"],["level=","ApiTools::Logger","ApiTools/Logger.html#method-c-level-3D","(level)","<p>Set the current log level.\n<p>level &mdash; One of <code>:debug</code>, <code>:info</code>, <code>:warn</code>,\n<code>:error</code>. These are in order from most verbose …\n\n"],["limit","ApiTools::ServiceInterface::ToListDSL","ApiTools/ServiceInterface/ToListDSL.html#method-i-limit","( limit )","<p>Specify the page size (limit) for lists.\n<p>limit &mdash; Page size (integer).\n\n<p>Example:\n"],["list","ApiTools::ServiceImplementation","ApiTools/ServiceImplementation.html#method-i-list","( context )","<p>Implement a “list” action (paginated, sorted list of resources).\n<p>context &mdash; ApiTools::ServiceContext …\n\n"],["list","ApiTools::ServiceMiddleware::ServiceEndpoint","ApiTools/ServiceMiddleware/ServiceEndpoint.html#method-i-list","( query_hash = nil )","<p>Obtain a list of resource instance representations.\n<p>query_hash &mdash; See #initialize. This is the only way to …\n\n"],["load_session","ApiTools::ServiceSession","ApiTools/ServiceSession.html#method-c-load_session","(memcache_url, session_id)","<p>Create a ServiceSession instance by loading the session from memcache.\n<p>The <code>memcache_url</code> parameter should …\n"],["local_service_for","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-i-local_service_for","( resource, version = 1 )","<p>Is the given resource available as a local endpoint in this service\napplication?\n<p>resource &mdash; Resource name …\n"],["logger","ApiTools::Logger","ApiTools/Logger.html#method-c-logger","()","<p>Return the current logger, or `nil` if undefined. See also ::logger=.\n"],["logger=","ApiTools::Logger","ApiTools/Logger.html#method-c-logger-3D","(logger)","<p>Set the current logger.\n<p>logger &mdash; The logger class to use (any class that implements the same interface as …\n\n"],["merge!","ApiTools::Errors","ApiTools/Errors.html#method-i-merge-21","( source )","<p>Merge the contents of a source error object with this one, adding its\nerrors to this collection. No checks …\n"],["new","ApiTools::Data::DocumentedObject","ApiTools/Data/DocumentedObject.html#method-c-new","(name = nil, options = {})",""],["new","ApiTools::ErrorDescriptions","ApiTools/ErrorDescriptions.html#method-c-new","( domain = nil, &block )","<p>Create an instance, self-declaring <code>platform</code> and\n<code>generic</code> domain errors. You can optionally call the constructor\n…\n"],["new","ApiTools::ErrorDescriptions::DomainDescriptions","ApiTools/ErrorDescriptions/DomainDescriptions.html#method-c-new","( domain )","<p>Initialize a new instance for the given domain.\n<p>domain &mdash; The domain string - for most service-based callers, …\n\n"],["new","ApiTools::Errors","ApiTools/Errors.html#method-c-new","( descriptions = DEFAULT_ERROR_DESCRIPTIONS )","<p>Create an instance.\n<p>descriptions &mdash; (Optional) ApiTools::ErrorDescriptions instance with\nservice-domain-specific …\n\n"],["new","ApiTools::Presenters::Decimal","ApiTools/Presenters/Decimal.html#method-c-new","(name, options = {})","<p>Initialize a Decimal instance with the appropriate name and options\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of …\n"],["new","ApiTools::Presenters::Enum","ApiTools/Presenters/Enum.html#method-c-new","(name, options = {})","<p>Initialize a String instance with the appropriate name and options\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of …\n"],["new","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-c-new","(name, options = {})","<p>Initialize a Field instance with the appropriate name and options\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["new","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-c-new","(name = nil, options = {})","<p>Initialize an Object instance with the appropriate name and options\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of …\n"],["new","ApiTools::Presenters::String","ApiTools/Presenters/String.html#method-c-new","(name, options = {})","<p>Initialize a String instance with the appropriate name and options\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of …\n"],["new","ApiTools::Presenters::UUID","ApiTools/Presenters/UUID.html#method-c-new","(name, options = {})","<p>Initialize a UUID instance with the appropriate name and options\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["new","ApiTools::ServiceContext","ApiTools/ServiceContext.html#method-c-new","( session, request, response, middleware )","<p>Create a new instance.\n<p>session &mdash; See #session.\n<p>request &mdash; See #request.\n"],["new","ApiTools::ServiceInterface::ToList","ApiTools/ServiceInterface/ToList.html#method-c-new","()","<p>Create an instance with default settings.\n"],["new","ApiTools::ServiceInterface::ToListDSL","ApiTools/ServiceInterface/ToListDSL.html#method-c-new","( api_tools_service_interface_to_list_instance, &block )","<p>Initialize an instance and run the DSL methods.\n<p>api_tools_service_interface_to_list_instance &mdash; Instance …\n\n"],["new","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-c-new","( app )","<p>Initialize the middleware instance.\n<p><code>app</code> Rack app instance to which calls should be passed.\n"],["new","ApiTools::ServiceMiddleware::ServiceEndpoint","ApiTools/ServiceMiddleware/ServiceEndpoint.html#method-c-new","( middleware_instance, resource, version = 1 )","<p>Create an endpoint instance on behalf of the given\nApiTools::ServiceMiddleware instance, directed at …\n"],["new","ApiTools::ServiceMiddleware::ServiceRegistryDRbServer","ApiTools/ServiceMiddleware/ServiceRegistryDRbServer.html#method-c-new","()",""],["new","ApiTools::ServiceRequest","ApiTools/ServiceRequest.html#method-c-new","()","<p>Set up defaults in this instance.\n"],["new","ApiTools::ServiceResponse","ApiTools/ServiceResponse.html#method-c-new","()","<p>Create a new instance, ready to take on a response. The service middleware\nresponsible for doing this. …\n"],["new","ApiTools::ServiceSession","ApiTools/ServiceSession.html#method-c-new","(options = {})","<p>Instantiate a new ServiceSession instance with the optional supplied\nparameters\n"],["new","ApiTools::ThreadSafeHash","ApiTools/ThreadSafeHash.html#method-c-new","()",""],["object","ApiTools::Data::DocumentedDSL","ApiTools/Data/DocumentedDSL.html#method-i-object","(name, options = {}, &block)","<p>As ApiTools::Presenters::BaseDSL#object but with the extended DSL in\nApiTools::Data::DocumentedDSL available …\n"],["object","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-object","(name, options = {}, &block)","<p>Define a JSON object with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["on_queue?","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-c-on_queue-3F","()","<p>Are we running on the queue, else (implied) a local HTTP server?\n"],["platform_context_prefix","ApiTools::PlatformContext","ApiTools/PlatformContext.html#method-i-platform_context_prefix","()","<p>Return a string of the format `&lt;subscriber_id&gt;:&lt;programme_id&gt;:`\n"],["process_json_payload","ApiTools::JsonPayload","ApiTools/JsonPayload.html#method-i-process_json_payload","()","<p>Process the request body as JSON, and place a `Hash` of the parsed\nstructure in the `@payload` instance …\n"],["publish_event","ApiTools::Events::PlatformEvent","ApiTools/Events/PlatformEvent.html#method-c-publish_event","(topic, data)",""],["read_at_path","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-read_at_path","( from_target, with_path )","<p>Dive down into a given target data hash using the given array of path keys,\nreturning the result at the …\n"],["recognised?","ApiTools::ErrorDescriptions","ApiTools/ErrorDescriptions.html#method-i-recognised-3F","( code )","<p>Is the given error code recognised? Returns <code>true</code> if so, else\n<code>false</code>.\n<p>code &mdash; Error code in full, e.g. +generic.invalid_state&#39;. …\n\n"],["record_host_and_port","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-c-record_host_and_port","( options = {} )","<p>Record internally the HTTP host and port during local development via e.g\n“rackup” or testing …\n"],["remote_service_for","ApiTools::ServiceMiddleware","ApiTools/ServiceMiddleware.html#method-i-remote_service_for","( resource, version = 1 )","<p>Is the given resource available as a remote endpoint we can target via\nHTTP?\n<p>resource &mdash; Resource name of …\n"],["rename","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-rename","( name )","<p>Rename a property to the given name. The internal name is changed and the\nlast path entry set to the …\n"],["render","ApiTools::Data::DocumentedPresenter","ApiTools/Data/DocumentedPresenter.html#method-c-render","( data, uuid = nil, created_at = nil, language = 'en-nz' )","<p>Return a to-JSON hash that represents this resource.\n<p>data &mdash; Hash or Array (depending on resource&#39;s top-level …\n"],["render","ApiTools::Errors","ApiTools/Errors.html#method-i-render","()","<p>Return a Hash rendered through the ApiTools::Data::Resources::Errors\ncollection representing the formalised …\n"],["render","ApiTools::Presenters::Array","ApiTools/Presenters/Array.html#method-i-render","(data, target)","<p>Render an array into the target hash based on the internal state that\ndescribes this instance&#39;s current …\n"],["render","ApiTools::Presenters::BasePresenter","ApiTools/Presenters/BasePresenter.html#method-c-render","(data)","<p>Given some data that should conform to the subclass presenter&#39;s schema,\nrender it to go from the …\n"],["render","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-render","(data, target)","<p>Dive down into a given hash along path array +@path+, building new hash\nentries if necessary at each …\n"],["render","ApiTools::Presenters::Hash","ApiTools/Presenters/Hash.html#method-i-render","(data, target)","<p>Render a hash into the target hash based on the internal state that\ndescribes this instance&#39;s current …\n"],["render","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-render","( data, target )","<p>Render inbound data into a target hash according to the schema, applying\ndefaults where defined for fields …\n"],["resource","ApiTools::Data::DocumentedDSL","ApiTools/Data/DocumentedDSL.html#method-i-resource","( resource_name, options = nil )","<p>Declare that a resource of a given name is included at this point. This is\nonly normally done within …\n"],["resource","ApiTools::ServiceContext","ApiTools/ServiceContext.html#method-i-resource","( resource_name, version = 1 )","<p>Request (and lazy-initialize) a new resource endpoint instance for talking\nto a resource&#39;s interface. …\n"],["rewrite_path","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-rewrite_path","( depth, name )","<p>Change the +@path+ array by writing a given value in at a given index. If\nthis property has any sub-properties, …\n"],["run!","ApiTools::Generator","ApiTools/Generator.html#method-i-run-21","(args)",""],["schema","ApiTools::Data::DocumentedPresenter","ApiTools/Data/DocumentedPresenter.html#method-c-schema","(&block)","<p>Define the JSON schema for validation. See also ::schema_definition.\n<p>&amp;block &mdash; Block that makes calls …\n\n"],["schema","ApiTools::Presenters::BasePresenter","ApiTools/Presenters/BasePresenter.html#method-c-schema","(&block)","<p>Define the JSON schema for validation.\n<p>&amp;block &mdash; Block that makes calls to the DSL defined in ApiTools::Presenters::BaseDSL\n…\n\n"],["schema_definition","ApiTools::Data::DocumentedPresenter","ApiTools/Data/DocumentedPresenter.html#method-c-schema_definition","()","<p>Read back the block that defined the schema. See also ::schema.\n"],["search","ApiTools::ServiceInterface::ToListDSL","ApiTools/ServiceInterface/ToListDSL.html#method-i-search","( *search )","<p>Specify supported search keys in an array. The middleware will make sure\nthe interface implementation …\n"],["show","ApiTools::ServiceImplementation","ApiTools/ServiceImplementation.html#method-i-show","( context )","<p>Implement a “show” action (represent one existing resource instance).\n<p>context &mdash; ApiTools::ServiceContext …\n\n"],["show","ApiTools::ServiceMiddleware::ServiceEndpoint","ApiTools/ServiceMiddleware/ServiceEndpoint.html#method-i-show","( ident, query_hash = nil )","<p>Obtain a resource instance representation.\n<p>ident &mdash; See #intiialize.\n<p>query_hash &mdash; See #initialize.\n"],["sort","ApiTools::ServiceInterface::ToListDSL","ApiTools/ServiceInterface/ToListDSL.html#method-i-sort","( sort )","<p>Specify extra sort keys and orders that add with whatever platform common\ndefaults are already in place. …\n"],["store!","ApiTools::Errors","ApiTools/Errors.html#method-i-store-21","()","<p>TODO: Persistence - e.g. database locally, or queue if available.\n"],["string","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-string","(name, options = {})","<p>Define a JSON string with the supplied name and options Params\n<p>name &mdash; The JSON key\n<p>options &mdash; A <code>Hash</code> of options, …\n"],["stringify","ApiTools::Utilities","ApiTools/Utilities.html#method-c-stringify","(obj)","<p>The keys-to-strings equivalnet of ::symbolize.\n<p>obj &mdash; Hash or Array of Hashes. Will recursively convert keys …\n\n"],["symbolize","ApiTools::Utilities","ApiTools/Utilities.html#method-c-symbolize","(obj)","<p>Given a hash, returns the same hash with keys converted to symbols. Works\nwith nested hashes. Taken from: …\n"],["tags","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-tags","( field_name, options = nil )","<p>Declares that this Type or Resource has a string field of unlimited length\nthat contains comma-separated …\n"],["testing","ApiTools::ServiceSession","ApiTools/ServiceSession.html#method-c-testing","(test_mode, mock_session = nil)","<p>Set testing mode.\n<p><code>test_mode</code> should be set to true/false. The optional\n<code>mock_session</code> parameter defines the …\n"],["text","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-text","(name, options = {})","<p>Define a JSON string of unlimited length with the supplied name and options\nParams\n<p>name &mdash; The JSON key\n<p>options … &mdash; "],["to_create","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-to_create","( &block )","<p>Optional description of the JSON parameters (schema) that the\ninterface&#39;s implementation requires …\n"],["to_integer?","ApiTools::Utilities","ApiTools/Utilities.html#method-c-to_integer-3F","( value )","<p>Is a parameter convertable to an integer cleanly? Returns the integer value\nif so, else <code>nil</code>.\n<p>value &mdash; Value …\n\n"],["to_list","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-to_list","( &block )","<p>Specify parameters related to common index parameters. The block contains\ncalls to the DSL described …\n"],["to_update","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-to_update","( &block )","<p>As #to_create, but applies when modifying existing resource instances. To\navoid repeating yourself, if …\n"],["touch_session","ApiTools::Auth::PlatformAuth","ApiTools/Auth/PlatformAuth.html#method-c-touch_session","(session_id)","<p>Touch the supplied session by calling touch on the configured Auth Service \n(CONFIG[&#39;auth_service_uri&#39;]+“/session/current/touch”) …\n"],["type","ApiTools::Data::DocumentedDSL","ApiTools/Data/DocumentedDSL.html#method-i-type","( type_name, options = nil )","<p>Declare that a nested type of a given name is included at this point. This\nis only normally done within …\n"],["unjoin_and_unescape_commas","ApiTools::Errors","ApiTools/Errors.html#method-i-unjoin_and_unescape_commas","( str )","<p>When reference data is specified for errors, the reference values are\nconcatenated together into a comma-separated …\n"],["update","ApiTools::ServiceImplementation","ApiTools/ServiceImplementation.html#method-i-update","( context )","<p>Implement a “update” action (modify one existing resource instance).\n<p>context &mdash; ApiTools::ServiceContext …\n\n"],["update","ApiTools::ServiceMiddleware::ServiceEndpoint","ApiTools/ServiceMiddleware/ServiceEndpoint.html#method-i-update","( ident, body_hash, query_hash = nil )","<p>Update a resource instance.\n<p>ident &mdash; See #intiialize.\n<p>body_hash &mdash; See #intiialize.\n"],["update_same_as_create","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-update_same_as_create","()","<p>Declares that the expected JSON fields described in a #to_create call are\nthe same as those required …\n"],["uri_path_components=","ApiTools::ServiceRequest","ApiTools/ServiceRequest.html#method-i-uri_path_components-3D","( ary )","<p>Set the array returned by #uri_path_components and record the first element\nin the value returned by …\n"],["uuid","ApiTools::Presenters::BaseDSL","ApiTools/Presenters/BaseDSL.html#method-i-uuid","( field_name, options = nil )","<p>Declares that this Type or Resource _refers to_ another Resource instance\nvia its UUID. There&#39;s no …\n"],["valid?","ApiTools::UUID","ApiTools/UUID.html#method-c-valid-3F","( uuid )","<p>Checks if a UUID string is valid. Returns <code>true</code> if so, else\n<code>false</code>.\n<p>uuid &mdash; UUID string to validate. Must be …\n\n"],["validate","ApiTools::Data::DocumentedPresenter","ApiTools/Data/DocumentedPresenter.html#method-c-validate","( data, type_data_only = false )","<p>Is the given rendering of a resource valid? Returns an array of Error\nPrimitive types (as hashes); this …\n"],["validate","ApiTools::Presenters::Array","ApiTools/Presenters/Array.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Array and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::BasePresenter","ApiTools/Presenters/BasePresenter.html#method-c-validate","(data)","<p>Given JSON data that&#39;s been parsed from a String into an equivalent\nRuby Hash, with String keys, …\n"],["validate","ApiTools::Presenters::Boolean","ApiTools/Presenters/Boolean.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Boolean and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Date","ApiTools/Presenters/Date.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Date and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::DateTime","ApiTools/Presenters/DateTime.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Datetime and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Decimal","ApiTools/Presenters/Decimal.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Decimal and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Enum","ApiTools/Presenters/Enum.html#method-i-validate","(data, path = '')","<p>Check if data is a valid String and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-validate","(data, path = '')","<p>Check if data is required and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Float","ApiTools/Presenters/Float.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Float and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Hash","ApiTools/Presenters/Hash.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Hash and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Integer","ApiTools/Presenters/Integer.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Integer and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Object and return an ApiTools::Errors instance\nwith zero (valid) or more (has …\n"],["validate","ApiTools::Presenters::String","ApiTools/Presenters/String.html#method-i-validate","(data, path = '')","<p>Check if data is a valid String and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::Text","ApiTools/Presenters/Text.html#method-i-validate","(data, path = '')","<p>Check if data is a valid String and return an ApiTools::Errors instance\n"],["validate","ApiTools::Presenters::UUID","ApiTools/Presenters/UUID.html#method-i-validate","(data, path = '')","<p>Check if data is a valid UUID and return an ApiTools::Errors instance\n"],["version","ApiTools::ServiceInterface","ApiTools/ServiceInterface.html#method-i-version","( major_version )","<p>Declare the <em>major</em> version of the interface being implemented. All\nservice endpoints appear at “/v{version}/{endpoint}” …\n"],["warn","ApiTools::Logger","ApiTools/Logger.html#method-c-warn","(*args)","<p>Write to the INFO log, provided the log level is <code>:debug</code>,\n<code>:info</code> or <code>:warn</code>. See also ::logger=.\n<p>*args &mdash; One …\n\n"],["README","","README_md.html","","<p>ApiTools\n<p><img\nsrc=\"https://magnum.travis-ci.com/LoyaltyNZ/api_tools.svg?token=qenLSjTyBsExZFCraVut&branch=master\">\n…\n"]]}}