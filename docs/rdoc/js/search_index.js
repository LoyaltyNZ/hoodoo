var search_data = {"index":{"searchIndex":["hoodoo","activerecord","base","errormapping","finder","classmethods","secure","classmethods","uuid","communicators","fast","pool","queueentry","queuewithtimeout","slow","data","resources","account","balance","calculation","calculator","caller","credit","currency","debit","errors","involvement","ledger","log","member","membership","outlet","participant","product","programme","purchase","refund","session","token","version","voucher","types","basket","basketitem","calculatorcommon","calculatorconfiguration","currency","currencyamount","currencyearner","errorprimitive","financialmanipulation","permissions","permissionsdefaults","permissionsfull","permissionsresources","product","voucherearner","errordescriptions","domaindescriptions","errors","missingreferencedata","unknowncode","generator","logger","communicator","fastcommunicator","fastwriter","filewriter","flattenermixin","logentriesdotcomwriter","payload","slowcommunicator","slowwriter","streamwriter","writermixin","presenters","array","base","basedsl","boolean","commonresourcefields","date","datetime","decimal","enum","field","float","hash","integer","object","string","tags","text","uuid","services","context","implementation","interface","tolist","tolistdsl","middleware","amqplogmessage","amqendpoint","amqplogwriter","endpoint","augmentedarray","augmentedbase","augmentedhash","exceptionreporting","airbrakereporter","basereporter","payload","raygunreporter","interaction","serviceregistrydrbserver","permissions","request","listparameters","response","service","session","mockdalliclient","stringinquirer","uuid","utilities","rack","server","uuidvalidator","<<()","acquire()","acquire_in()","acquire_with()","actions()","add()","add()","add()","add()","add_error()","add_error()","add_errors()","add_header()","add_precompiled_error()","add_precompiled_error()","additional_permissions_for()","adds_errors_to?()","adds_errors_to?()","array()","augment_session_with_permissions_for_action()","boolean()","bypass()","bypass?()","call()","call()","clear_errors()","communicate()","communicate()","communicate()","communicate()","communicate()","component_interfaces()","component_interfaces()","comprised_of()","create()","create()","dataset_size()","date()","datetime()","debug()","decimal()","deep_merge_into()","default()","default_sort_direction()","delete()","delete()","delete()","delete_from_memcached()","describe()","deserialize()","dropped()","dropped()","dropped?()","embeds()","endpoint()","enum()","environment()","error()","error()","errors_for()","errors_for()","expired?()","filter()","filter_with()","find()","flatten()","float()","flush()","flush_services_for_test()","for_rack()","from_h!()","from_h!()","full_path()","generate()","get()","get_header()","get_schema()","get_schema_definition()","halt_processing?()","has_default?()","has_errors?()","has_memcached?()","hash()","headers()","identity=()","included()","included()","included()","info()","inherited()","inspect()","instances()","instantiate()","instantiate()","instantiate()","integer()","inter_resource()","inter_resource_local()","inter_resource_remote()","interface()","interface()","internationalised()","is_internationalised?()","is_internationalised?()","key()","keys()","limit()","list()","list()","list()","list_filter_map()","list_finder()","list_in()","list_search_map()","load_from_memcached!()","local_service_for()","logger()","memcached_host()","merge!()","merge!()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","not_found()","object()","on_queue?()","permitted?()","ping()","platform_errors()","platform_errors()","polymorphic_find()","polymorphic_id_fields()","public_actions()","racks_original_start()","read_at_path()","recognised?()","record_host_and_port()","remote_service_for()","remove()","remove()","remove()","remove_all()","rename()","render()","render()","render()","render()","render()","render()","report()","report()","report()","report()","report()","report()","report()","report()","report()","report()","report?()","reset()","resource()","resource()","rewrite_path()","run!()","save_to_memcached()","schema()","scoping=()","search()","search_with()","secure()","secure_with()","serialize()","set()","set_default()","set_default_fallback()","set_log_folder()","set_logger()","set_platform_errors()","set_resource()","set_resource_fallback()","set_resources()","set_test_session()","shift()","show()","show()","sort()","spare_port()","start()","start()","start_and_record_host_and_port()","stop()","store()","string()","stringify()","symbolize()","sync?()","tags()","terminate()","terminate?()","test_session()","text()","to_create()","to_h()","to_h()","to_integer?()","to_list()","to_list()","to_update()","translate_errors_from_other_resource()","type()","unjoin_and_unescape_commas()","update()","update()","update()","update_caller_version_in_memcached()","update_same_as_create()","uri()","uri_path_components=()","uuid()","valid?()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate_each()","verify()","version()","wait()","wait()","wait()","warn()","readme"],"longSearchIndex":["hoodoo","hoodoo::activerecord","hoodoo::activerecord::base","hoodoo::activerecord::errormapping","hoodoo::activerecord::finder","hoodoo::activerecord::finder::classmethods","hoodoo::activerecord::secure","hoodoo::activerecord::secure::classmethods","hoodoo::activerecord::uuid","hoodoo::communicators","hoodoo::communicators::fast","hoodoo::communicators::pool","hoodoo::communicators::pool::queueentry","hoodoo::communicators::pool::queuewithtimeout","hoodoo::communicators::slow","hoodoo::data","hoodoo::data::resources","hoodoo::data::resources::account","hoodoo::data::resources::balance","hoodoo::data::resources::calculation","hoodoo::data::resources::calculator","hoodoo::data::resources::caller","hoodoo::data::resources::credit","hoodoo::data::resources::currency","hoodoo::data::resources::debit","hoodoo::data::resources::errors","hoodoo::data::resources::involvement","hoodoo::data::resources::ledger","hoodoo::data::resources::log","hoodoo::data::resources::member","hoodoo::data::resources::membership","hoodoo::data::resources::outlet","hoodoo::data::resources::participant","hoodoo::data::resources::product","hoodoo::data::resources::programme","hoodoo::data::resources::purchase","hoodoo::data::resources::refund","hoodoo::data::resources::session","hoodoo::data::resources::token","hoodoo::data::resources::version","hoodoo::data::resources::voucher","hoodoo::data::types","hoodoo::data::types::basket","hoodoo::data::types::basketitem","hoodoo::data::types::calculatorcommon","hoodoo::data::types::calculatorconfiguration","hoodoo::data::types::currency","hoodoo::data::types::currencyamount","hoodoo::data::types::currencyearner","hoodoo::data::types::errorprimitive","hoodoo::data::types::financialmanipulation","hoodoo::data::types::permissions","hoodoo::data::types::permissionsdefaults","hoodoo::data::types::permissionsfull","hoodoo::data::types::permissionsresources","hoodoo::data::types::product","hoodoo::data::types::voucherearner","hoodoo::errordescriptions","hoodoo::errordescriptions::domaindescriptions","hoodoo::errors","hoodoo::errors::missingreferencedata","hoodoo::errors::unknowncode","hoodoo::generator","hoodoo::logger","hoodoo::logger::communicator","hoodoo::logger::fastcommunicator","hoodoo::logger::fastwriter","hoodoo::logger::filewriter","hoodoo::logger::flattenermixin","hoodoo::logger::logentriesdotcomwriter","hoodoo::logger::payload","hoodoo::logger::slowcommunicator","hoodoo::logger::slowwriter","hoodoo::logger::streamwriter","hoodoo::logger::writermixin","hoodoo::presenters","hoodoo::presenters::array","hoodoo::presenters::base","hoodoo::presenters::basedsl","hoodoo::presenters::boolean","hoodoo::presenters::commonresourcefields","hoodoo::presenters::date","hoodoo::presenters::datetime","hoodoo::presenters::decimal","hoodoo::presenters::enum","hoodoo::presenters::field","hoodoo::presenters::float","hoodoo::presenters::hash","hoodoo::presenters::integer","hoodoo::presenters::object","hoodoo::presenters::string","hoodoo::presenters::tags","hoodoo::presenters::text","hoodoo::presenters::uuid","hoodoo::services","hoodoo::services::context","hoodoo::services::implementation","hoodoo::services::interface","hoodoo::services::interface::tolist","hoodoo::services::interface::tolistdsl","hoodoo::services::middleware","hoodoo::services::middleware::amqplogmessage","hoodoo::services::middleware::amqplogmessage::amqendpoint","hoodoo::services::middleware::amqplogwriter","hoodoo::services::middleware::endpoint","hoodoo::services::middleware::endpoint::augmentedarray","hoodoo::services::middleware::endpoint::augmentedbase","hoodoo::services::middleware::endpoint::augmentedhash","hoodoo::services::middleware::exceptionreporting","hoodoo::services::middleware::exceptionreporting::airbrakereporter","hoodoo::services::middleware::exceptionreporting::basereporter","hoodoo::services::middleware::exceptionreporting::payload","hoodoo::services::middleware::exceptionreporting::raygunreporter","hoodoo::services::middleware::interaction","hoodoo::services::middleware::serviceregistrydrbserver","hoodoo::services::permissions","hoodoo::services::request","hoodoo::services::request::listparameters","hoodoo::services::response","hoodoo::services::service","hoodoo::services::session","hoodoo::services::session::mockdalliclient","hoodoo::stringinquirer","hoodoo::uuid","hoodoo::utilities","rack","rack::server","uuidvalidator","hoodoo::communicators::pool::queuewithtimeout#<<()","hoodoo::activerecord::finder::classmethods#acquire()","hoodoo::activerecord::finder::classmethods#acquire_in()","hoodoo::activerecord::finder::classmethods#acquire_with()","hoodoo::services::interface#actions()","hoodoo::communicators::pool#add()","hoodoo::logger#add()","hoodoo::services::middleware::exceptionreporting::add()","hoodoo::services::middleware::serviceregistrydrbserver#add()","hoodoo::errors#add_error()","hoodoo::services::response#add_error()","hoodoo::services::response#add_errors()","hoodoo::services::response#add_header()","hoodoo::errors#add_precompiled_error()","hoodoo::services::response#add_precompiled_error()","hoodoo::services::interface#additional_permissions_for()","hoodoo::activerecord::errormapping#adds_errors_to?()","hoodoo::services::middleware::endpoint::augmentedbase#adds_errors_to?()","hoodoo::presenters::basedsl#array()","hoodoo::services::middleware#augment_session_with_permissions_for_action()","hoodoo::presenters::basedsl#boolean()","hoodoo::services::session::mockdalliclient::bypass()","hoodoo::services::session::mockdalliclient::bypass?()","hoodoo::services::middleware#call()","hoodoo::services::service#call()","hoodoo::errors#clear_errors()","hoodoo::communicators::fast#communicate()","hoodoo::communicators::pool#communicate()","hoodoo::communicators::slow#communicate()","hoodoo::logger::communicator#communicate()","hoodoo::services::middleware::exceptionreporting::basereporter#communicate()","hoodoo::services::service::component_interfaces()","hoodoo::services::service#component_interfaces()","hoodoo::services::service::comprised_of()","hoodoo::services::implementation#create()","hoodoo::services::middleware::endpoint#create()","hoodoo::activerecord::finder::classmethods#dataset_size()","hoodoo::presenters::basedsl#date()","hoodoo::presenters::basedsl#datetime()","hoodoo::logger#debug()","hoodoo::presenters::basedsl#decimal()","hoodoo::utilities::deep_merge_into()","hoodoo::services::interface::tolistdsl#default()","hoodoo::services::interface::tolist#default_sort_direction()","hoodoo::services::implementation#delete()","hoodoo::services::middleware::endpoint#delete()","hoodoo::services::session::mockdalliclient#delete()","hoodoo::services::session#delete_from_memcached()","hoodoo::errordescriptions#describe()","hoodoo::services::middleware::amqplogmessage#deserialize()","hoodoo::communicators::slow#dropped()","hoodoo::logger::communicator#dropped()","hoodoo::communicators::pool::queueentry#dropped?()","hoodoo::services::interface#embeds()","hoodoo::services::interface#endpoint()","hoodoo::presenters::basedsl#enum()","hoodoo::services::middleware::environment()","hoodoo::errordescriptions::domaindescriptions#error()","hoodoo::logger#error()","hoodoo::errordescriptions#errors_for()","hoodoo::services::interface#errors_for()","hoodoo::services::session#expired?()","hoodoo::services::interface::tolistdsl#filter()","hoodoo::activerecord::finder::classmethods#filter_with()","hoodoo::services::middleware::serviceregistrydrbserver#find()","hoodoo::logger::flattenermixin#flatten()","hoodoo::presenters::basedsl#float()","hoodoo::services::middleware::serviceregistrydrbserver#flush()","hoodoo::services::middleware::flush_services_for_test()","hoodoo::services::response#for_rack()","hoodoo::services::permissions#from_h!()","hoodoo::services::session#from_h!()","hoodoo::presenters::field#full_path()","hoodoo::uuid::generate()","hoodoo::services::session::mockdalliclient#get()","hoodoo::services::response#get_header()","hoodoo::presenters::base::get_schema()","hoodoo::presenters::base::get_schema_definition()","hoodoo::services::response#halt_processing?()","hoodoo::presenters::field#has_default?()","hoodoo::errors#has_errors?()","hoodoo::services::middleware::has_memcached?()","hoodoo::presenters::basedsl#hash()","hoodoo::services::response#headers()","hoodoo::services::session#identity=()","hoodoo::activerecord::finder::included()","hoodoo::activerecord::secure::included()","hoodoo::activerecord::uuid::included()","hoodoo::logger#info()","hoodoo::activerecord::base::inherited()","hoodoo::errors#inspect()","hoodoo::logger#instances()","hoodoo::activerecord::finder::instantiate()","hoodoo::activerecord::secure::instantiate()","hoodoo::activerecord::uuid::instantiate()","hoodoo::presenters::basedsl#integer()","hoodoo::services::middleware#inter_resource()","hoodoo::services::middleware#inter_resource_local()","hoodoo::services::middleware#inter_resource_remote()","hoodoo::services::interface::interface()","hoodoo::services::middleware::endpoint#interface()","hoodoo::presenters::basedsl#internationalised()","hoodoo::presenters::base::is_internationalised?()","hoodoo::presenters::basedsl#is_internationalised?()","hoodoo::presenters::hash#key()","hoodoo::presenters::hash#keys()","hoodoo::services::interface::tolistdsl#limit()","hoodoo::activerecord::finder::classmethods#list()","hoodoo::services::implementation#list()","hoodoo::services::middleware::endpoint#list()","hoodoo::activerecord::finder::classmethods#list_filter_map()","hoodoo::activerecord::finder::classmethods#list_finder()","hoodoo::activerecord::finder::classmethods#list_in()","hoodoo::activerecord::finder::classmethods#list_search_map()","hoodoo::services::session#load_from_memcached!()","hoodoo::services::middleware#local_service_for()","hoodoo::services::middleware::logger()","hoodoo::services::middleware::memcached_host()","hoodoo::errors#merge!()","hoodoo::services::permissions#merge!()","hoodoo::communicators::pool::new()","hoodoo::communicators::pool::queueentry::new()","hoodoo::communicators::pool::queuewithtimeout::new()","hoodoo::errordescriptions::new()","hoodoo::errordescriptions::domaindescriptions::new()","hoodoo::errors::new()","hoodoo::logger::new()","hoodoo::logger::communicator::new()","hoodoo::logger::filewriter::new()","hoodoo::logger::logentriesdotcomwriter::new()","hoodoo::logger::payload::new()","hoodoo::logger::streamwriter::new()","hoodoo::presenters::decimal::new()","hoodoo::presenters::enum::new()","hoodoo::presenters::field::new()","hoodoo::presenters::object::new()","hoodoo::presenters::string::new()","hoodoo::presenters::uuid::new()","hoodoo::services::context::new()","hoodoo::services::interface::tolist::new()","hoodoo::services::interface::tolistdsl::new()","hoodoo::services::middleware::new()","hoodoo::services::middleware::amqplogmessage::new()","hoodoo::services::middleware::amqplogwriter::new()","hoodoo::services::middleware::endpoint::new()","hoodoo::services::middleware::exceptionreporting::payload::new()","hoodoo::services::middleware::interaction::new()","hoodoo::services::middleware::serviceregistrydrbserver::new()","hoodoo::services::permissions::new()","hoodoo::services::request::new()","hoodoo::services::request::listparameters::new()","hoodoo::services::response::new()","hoodoo::services::session::new()","hoodoo::services::response#not_found()","hoodoo::presenters::basedsl#object()","hoodoo::services::middleware::on_queue?()","hoodoo::services::permissions#permitted?()","hoodoo::services::middleware::serviceregistrydrbserver#ping()","hoodoo::activerecord::errormapping#platform_errors()","hoodoo::services::middleware::endpoint::augmentedbase#platform_errors()","hoodoo::activerecord::finder::classmethods#polymorphic_find()","hoodoo::activerecord::finder::classmethods#polymorphic_id_fields()","hoodoo::services::interface#public_actions()","rack::server::racks_original_start()","hoodoo::presenters::field#read_at_path()","hoodoo::errordescriptions#recognised?()","hoodoo::services::middleware::record_host_and_port()","hoodoo::services::middleware#remote_service_for()","hoodoo::communicators::pool#remove()","hoodoo::logger#remove()","hoodoo::services::middleware::exceptionreporting::remove()","hoodoo::logger#remove_all()","hoodoo::presenters::field#rename()","hoodoo::errors#render()","hoodoo::presenters::array#render()","hoodoo::presenters::base::render()","hoodoo::presenters::field#render()","hoodoo::presenters::hash#render()","hoodoo::presenters::object#render()","hoodoo::logger#report()","hoodoo::logger::filewriter#report()","hoodoo::logger::logentriesdotcomwriter#report()","hoodoo::logger::streamwriter#report()","hoodoo::logger::writermixin#report()","hoodoo::services::middleware::amqplogwriter#report()","hoodoo::services::middleware::exceptionreporting::report()","hoodoo::services::middleware::exceptionreporting::airbrakereporter#report()","hoodoo::services::middleware::exceptionreporting::basereporter#report()","hoodoo::services::middleware::exceptionreporting::raygunreporter#report()","hoodoo::logger#report?()","hoodoo::services::session::mockdalliclient::reset()","hoodoo::presenters::basedsl#resource()","hoodoo::services::context#resource()","hoodoo::presenters::field#rewrite_path()","hoodoo::generator#run!()","hoodoo::services::session#save_to_memcached()","hoodoo::presenters::base::schema()","hoodoo::services::session#scoping=()","hoodoo::services::interface::tolistdsl#search()","hoodoo::activerecord::finder::classmethods#search_with()","hoodoo::activerecord::secure::classmethods#secure()","hoodoo::activerecord::secure::classmethods#secure_with()","hoodoo::services::middleware::amqplogmessage#serialize()","hoodoo::services::session::mockdalliclient#set()","hoodoo::services::permissions#set_default()","hoodoo::services::permissions#set_default_fallback()","hoodoo::services::middleware::set_log_folder()","hoodoo::services::middleware::set_logger()","hoodoo::services::middleware::endpoint::augmentedbase#set_platform_errors()","hoodoo::services::permissions#set_resource()","hoodoo::services::permissions#set_resource_fallback()","hoodoo::services::response#set_resources()","hoodoo::services::middleware::set_test_session()","hoodoo::communicators::pool::queuewithtimeout#shift()","hoodoo::services::implementation#show()","hoodoo::services::middleware::endpoint#show()","hoodoo::services::interface::tolistdsl#sort()","hoodoo::utilities::spare_port()","hoodoo::services::middleware::serviceregistrydrbserver::start()","rack::server::start()","rack::server::start_and_record_host_and_port()","hoodoo::services::middleware::serviceregistrydrbserver#stop()","hoodoo::services::session::mockdalliclient::store()","hoodoo::presenters::basedsl#string()","hoodoo::utilities::stringify()","hoodoo::utilities::symbolize()","hoodoo::communicators::pool::queueentry#sync?()","hoodoo::presenters::basedsl#tags()","hoodoo::communicators::pool#terminate()","hoodoo::communicators::pool::queueentry#terminate?()","hoodoo::services::middleware::test_session()","hoodoo::presenters::basedsl#text()","hoodoo::services::interface#to_create()","hoodoo::services::permissions#to_h()","hoodoo::services::session#to_h()","hoodoo::utilities::to_integer?()","hoodoo::services::interface#to_list()","hoodoo::services::interface::to_list()","hoodoo::services::interface#to_update()","hoodoo::services::middleware#translate_errors_from_other_resource()","hoodoo::presenters::basedsl#type()","hoodoo::errors#unjoin_and_unescape_commas()","hoodoo::services::implementation#update()","hoodoo::services::middleware::amqplogmessage#update()","hoodoo::services::middleware::endpoint#update()","hoodoo::services::session#update_caller_version_in_memcached()","hoodoo::services::interface#update_same_as_create()","hoodoo::services::middleware::serviceregistrydrbserver::uri()","hoodoo::services::request#uri_path_components=()","hoodoo::presenters::basedsl#uuid()","hoodoo::uuid::valid?()","hoodoo::presenters::array#validate()","hoodoo::presenters::base::validate()","hoodoo::presenters::boolean#validate()","hoodoo::presenters::date#validate()","hoodoo::presenters::datetime#validate()","hoodoo::presenters::decimal#validate()","hoodoo::presenters::enum#validate()","hoodoo::presenters::field#validate()","hoodoo::presenters::float#validate()","hoodoo::presenters::hash#validate()","hoodoo::presenters::integer#validate()","hoodoo::presenters::object#validate()","hoodoo::presenters::string#validate()","hoodoo::presenters::text#validate()","hoodoo::presenters::uuid#validate()","uuidvalidator#validate_each()","hoodoo::services::implementation#verify()","hoodoo::services::interface#version()","hoodoo::communicators::pool#wait()","hoodoo::logger#wait()","hoodoo::services::middleware::exceptionreporting::wait()","hoodoo::logger#warn()",""],"info":[["Hoodoo","","classes/Hoodoo.html","","<p>Module used as a namespace for all of Hoodoo&#39;s facilities.\n<p>File &mdash; uuid_validator.rb\n<p>(C) &mdash; Loyalty New  …\n"],["Hoodoo::ActiveRecord","","classes/Hoodoo/ActiveRecord.html","","<p>Support mixins for models subclassed from ActiveRecord::Base. See:\n<p>guides.rubyonrails.org/active_record_basics.html …\n\n"],["Hoodoo::ActiveRecord::Base","","classes/Hoodoo/ActiveRecord/Base.html","","<p>While individual ActiveRecord mixins can be included as and when needed, if\nyou want everything, just …\n"],["Hoodoo::ActiveRecord::ErrorMapping","","classes/Hoodoo/ActiveRecord/ErrorMapping.html","","<p>Support mixin for models subclassed from ActiveRecord::Base providing a\nmapping between ActiveRecord …\n"],["Hoodoo::ActiveRecord::Finder","","classes/Hoodoo/ActiveRecord/Finder.html","","<p>Support mixin for models subclassed from ActiveRecord::Base providing\nsupport methods to handle common …\n"],["Hoodoo::ActiveRecord::Finder::ClassMethods","","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html","","<p>Collection of class methods that get defined on an including class via\nHoodoo::ActiveRecord::Finder::included …\n"],["Hoodoo::ActiveRecord::Secure","","classes/Hoodoo/ActiveRecord/Secure.html","","<p>Support mixin for models subclassed from ActiveRecord::Base providing a\ncore out-of-box Hoodoo data access …\n"],["Hoodoo::ActiveRecord::Secure::ClassMethods","","classes/Hoodoo/ActiveRecord/Secure/ClassMethods.html","","<p>Collection of class methods that get defined on an including class via\nHoodoo::ActiveRecord::Secure::included …\n"],["Hoodoo::ActiveRecord::UUID","","classes/Hoodoo/ActiveRecord/UUID.html","","<p>Support mixin for models subclassed from ActiveRecord::Base providing\nautomatic UUID management. See: …\n"],["Hoodoo::Communicators","","classes/Hoodoo/Communicators.html","","<p>The Communicators module is used as a namespace for\nHoodoo::Communicators::Pool and its related utility …\n"],["Hoodoo::Communicators::Fast","","classes/Hoodoo/Communicators/Fast.html","","<p>See Hoodoo::Communicators::Pool for details.\n<p>A “fast communicator”. Subclass this to create …\n"],["Hoodoo::Communicators::Pool","","classes/Hoodoo/Communicators/Pool.html","","<p>Maintains a pool of object instances which are expected to be communicating\nwith “the outside world” …\n"],["Hoodoo::Communicators::Pool::QueueEntry","","classes/Hoodoo/Communicators/Pool/QueueEntry.html","","<p>Internal implementation detail of Hoodoo::Communicators::Pool which is\nplaced on a Ruby Queue and used …\n"],["Hoodoo::Communicators::Pool::QueueWithTimeout","","classes/Hoodoo/Communicators/Pool/QueueWithTimeout.html","","<p>Internal implementation detail of Hoodoo::Communicators::Pool.\n<p>Since pool clients can say “wait until …\n"],["Hoodoo::Communicators::Slow","","classes/Hoodoo/Communicators/Slow.html","","<p>See Hoodoo::Communicators::Pool for details.\n<p>A “slow communicator”. Subclass this to create …\n"],["Hoodoo::Data","","classes/Hoodoo/Data.html","","<p>This module provides a namespace for definitions of data types and formal\nresources which an API uses …\n"],["Hoodoo::Data::Resources","","classes/Hoodoo/Data/Resources.html","","<p>Module used as a namespace to collect classes that represent Resources\ndocumented by the your platform&#39;s …\n"],["Hoodoo::Data::Resources::Account","","classes/Hoodoo/Data/Resources/Account.html","","<p>Documented Platform API Resource &#39;Account&#39;.\n"],["Hoodoo::Data::Resources::Balance","","classes/Hoodoo/Data/Resources/Balance.html","","<p>Documented Platform API Resource &#39;Balance&#39;.\n"],["Hoodoo::Data::Resources::Calculation","","classes/Hoodoo/Data/Resources/Calculation.html","","<p>Documented Platform API Resource &#39;Calculation&#39;.\n"],["Hoodoo::Data::Resources::Calculator","","classes/Hoodoo/Data/Resources/Calculator.html","","<p>Documented Platform API Resource &#39;Calculator&#39;.\n"],["Hoodoo::Data::Resources::Caller","","classes/Hoodoo/Data/Resources/Caller.html","","<p>Documented Platform API Resource &#39;Caller&#39;.\n"],["Hoodoo::Data::Resources::Credit","","classes/Hoodoo/Data/Resources/Credit.html","","<p>Documented Platform API Resource &#39;Credit&#39;.\n"],["Hoodoo::Data::Resources::Currency","","classes/Hoodoo/Data/Resources/Currency.html","","<p>Documented Platform API Resource &#39;Currency&#39;.\n"],["Hoodoo::Data::Resources::Debit","","classes/Hoodoo/Data/Resources/Debit.html","","<p>Documented Platform API Resource &#39;Debit&#39;.\n"],["Hoodoo::Data::Resources::Errors","","classes/Hoodoo/Data/Resources/Errors.html","","<p>Documented Platform API Resource &#39;Errors&#39;.\n"],["Hoodoo::Data::Resources::Involvement","","classes/Hoodoo/Data/Resources/Involvement.html","","<p>Documented Platform API Resource &#39;Involvement&#39;.\n"],["Hoodoo::Data::Resources::Ledger","","classes/Hoodoo/Data/Resources/Ledger.html","","<p>Documented Platform API Resource &#39;Ledger&#39;.\n"],["Hoodoo::Data::Resources::Log","","classes/Hoodoo/Data/Resources/Log.html","","<p>Documented Platform API Resource &#39;Log&#39;.\n"],["Hoodoo::Data::Resources::Member","","classes/Hoodoo/Data/Resources/Member.html","","\n<pre><code>Since Member references Account and Account references Member, we have\nto define a dummy Member class ...</code></pre>\n"],["Hoodoo::Data::Resources::Membership","","classes/Hoodoo/Data/Resources/Membership.html","","<p>Documented Platform API Resource &#39;Membership&#39;.\n"],["Hoodoo::Data::Resources::Outlet","","classes/Hoodoo/Data/Resources/Outlet.html","","<p>Documented Platform API Resource &#39;Outlet&#39;.\n"],["Hoodoo::Data::Resources::Participant","","classes/Hoodoo/Data/Resources/Participant.html","","<p>Documented Platform API Resource &#39;Participant&#39;.\n"],["Hoodoo::Data::Resources::Product","","classes/Hoodoo/Data/Resources/Product.html","","<p>Documented Platform API Resource &#39;Product&#39;.\n"],["Hoodoo::Data::Resources::Programme","","classes/Hoodoo/Data/Resources/Programme.html","","<p>Documented Platform API Resource &#39;Programme&#39;.\n"],["Hoodoo::Data::Resources::Purchase","","classes/Hoodoo/Data/Resources/Purchase.html","","<p>Documented Platform API Resource &#39;Purchase&#39;.\n"],["Hoodoo::Data::Resources::Refund","","classes/Hoodoo/Data/Resources/Refund.html","","<p>Documented Platform API Resource &#39;Refund&#39;.\n"],["Hoodoo::Data::Resources::Session","","classes/Hoodoo/Data/Resources/Session.html","","<p>Documented Platform API Resource &#39;Session&#39;.\n"],["Hoodoo::Data::Resources::Token","","classes/Hoodoo/Data/Resources/Token.html","","<p>Documented Platform API Resource &#39;Token&#39;.\n"],["Hoodoo::Data::Resources::Version","","classes/Hoodoo/Data/Resources/Version.html","","<p>Documented Platform API Resource &#39;Version&#39;. This is an example that\nties in with the example …\n"],["Hoodoo::Data::Resources::Voucher","","classes/Hoodoo/Data/Resources/Voucher.html","","<p>Documented Platform API Resource &#39;Voucher&#39;.\n"],["Hoodoo::Data::Types","","classes/Hoodoo/Data/Types.html","","<p>Module used as a namespace to collect classes that represent Types\ndocumented by your platform&#39;s …\n"],["Hoodoo::Data::Types::Basket","","classes/Hoodoo/Data/Types/Basket.html","","<p>Documented Platform API Type &#39;Basket&#39;.\n"],["Hoodoo::Data::Types::BasketItem","","classes/Hoodoo/Data/Types/BasketItem.html","","<p>Documented Platform API Type &#39;BasketItem&#39;.\n"],["Hoodoo::Data::Types::CalculatorCommon","","classes/Hoodoo/Data/Types/CalculatorCommon.html","","<p>Documented Platform API Type &#39;CalculatorCommon&#39;.\n"],["Hoodoo::Data::Types::CalculatorConfiguration","","classes/Hoodoo/Data/Types/CalculatorConfiguration.html","","<p>Documented Platform API Type &#39;CalculatorConfiguration&#39;.\n"],["Hoodoo::Data::Types::Currency","","classes/Hoodoo/Data/Types/Currency.html","","<p>Documented Platform API Type &#39;Currency&#39;.\n"],["Hoodoo::Data::Types::CurrencyAmount","","classes/Hoodoo/Data/Types/CurrencyAmount.html","","<p>Documented Platform API Type &#39;CurrencyAmount&#39;.\n"],["Hoodoo::Data::Types::CurrencyEarner","","classes/Hoodoo/Data/Types/CurrencyEarner.html","","<p>Documented Platform API Type &#39;CurrencyEarner&#39;.\n"],["Hoodoo::Data::Types::ErrorPrimitive","","classes/Hoodoo/Data/Types/ErrorPrimitive.html","","<p>Documented Platform API Type &#39;ErrorPrimitive&#39;.\n"],["Hoodoo::Data::Types::FinancialManipulation","","classes/Hoodoo/Data/Types/FinancialManipulation.html","","<p>Documented Platform API Type &#39;FinancialManipulation&#39;.\n"],["Hoodoo::Data::Types::Permissions","","classes/Hoodoo/Data/Types/Permissions.html","","<p>Documented Platform API Type &#39;Permissions&#39;.\n"],["Hoodoo::Data::Types::PermissionsDefaults","","classes/Hoodoo/Data/Types/PermissionsDefaults.html","","<p>Documented Platform API Type &#39;PermissionsDefaults&#39;.\n"],["Hoodoo::Data::Types::PermissionsFull","","classes/Hoodoo/Data/Types/PermissionsFull.html","","<p>Documented Platform API Type &#39;PermissionsFull&#39;.\n"],["Hoodoo::Data::Types::PermissionsResources","","classes/Hoodoo/Data/Types/PermissionsResources.html","","<p>Documented Platform API Type &#39;PermissionsResources&#39;.\n"],["Hoodoo::Data::Types::Product","","classes/Hoodoo/Data/Types/Product.html","","<p>Documented Platform API Type &#39;Product&#39;.\n"],["Hoodoo::Data::Types::VoucherEarner","","classes/Hoodoo/Data/Types/VoucherEarner.html","","<p>Documented Platform API Type &#39;VoucherEarner&#39;.\n"],["Hoodoo::ErrorDescriptions","","classes/Hoodoo/ErrorDescriptions.html","","<p>A collection of error descriptions. API service implementations create one\nof these, which self-declares …\n"],["Hoodoo::ErrorDescriptions::DomainDescriptions","","classes/Hoodoo/ErrorDescriptions/DomainDescriptions.html","","<p>Contain a description of errors for a particular domain, where the domain\nis a grouping string such as …\n"],["Hoodoo::Errors","","classes/Hoodoo/Errors.html","","<p>During request processing, API service implementations create an\nHoodoo::Errors instance and add error(s) …\n"],["Hoodoo::Errors::MissingReferenceData","","classes/Hoodoo/Errors/MissingReferenceData.html","","<p>Custom exception thrown when an error is added to a collection without\nincluding required reference data …\n"],["Hoodoo::Errors::UnknownCode","","classes/Hoodoo/Errors/UnknownCode.html","","<p>Custom exception thrown when an unknown error code is added to a\ncollection.\n"],["Hoodoo::Generator","","classes/Hoodoo/Generator.html","","<p>Implement the <code>hoodoo</code> command line interface.\n"],["Hoodoo::Logger","","classes/Hoodoo/Logger.html","","<p>Multiple output logging via local code or external services. Instantiate a\nnew Logger, then use #add …\n"],["Hoodoo::Logger::Communicator","","classes/Hoodoo/Logger/Communicator.html","","<p>Mixin used internally for the FastCommunicator and SlowCommunicator\nwrappers that hide implementation …\n"],["Hoodoo::Logger::FastCommunicator","","classes/Hoodoo/Logger/FastCommunicator.html","","<p>Used internally as a Hoodoo::Communicator::Pool communicator wrapping fast\nlog writer instances.\n"],["Hoodoo::Logger::FastWriter","","classes/Hoodoo/Logger/FastWriter.html","","<p>Log writer classes are used through the Hoodoo::Logger class.\n<p>Subclass FastWriter if you are writing a …\n"],["Hoodoo::Logger::FileWriter","","classes/Hoodoo/Logger/FileWriter.html","","<p>Writes unstructured messages to a file. Hoodoo::Logger::SlowWriter\nsubclass. See also Hoodoo::Logger …\n"],["Hoodoo::Logger::FlattenerMixin","","classes/Hoodoo/Logger/FlattenerMixin.html","","<p>This mixin is used by custom logger subclasses and defines a single method,\nHoodoo::Logger::FlattenerMixin#flatten …\n"],["Hoodoo::Logger::LogEntriesDotComWriter","","classes/Hoodoo/Logger/LogEntriesDotComWriter.html","","<p>Writes structured messages to logentries.com via the “le” gem, which uses\nits own asynchronous …\n"],["Hoodoo::Logger::Payload","","classes/Hoodoo/Logger/Payload.html","","<p>Used internally toommunicate details of a log message across the\nHoodoo::Communicators::Pool mechanism …\n"],["Hoodoo::Logger::SlowCommunicator","","classes/Hoodoo/Logger/SlowCommunicator.html","","<p>Used internally as a Hoodoo::Communicator::Pool communicator wrapping slow\nlog writer instances.\n"],["Hoodoo::Logger::SlowWriter","","classes/Hoodoo/Logger/SlowWriter.html","","<p>Log writer classes are used through the Hoodoo::Logger class.\n<p>Subclass SlowWriter if you are writing a …\n"],["Hoodoo::Logger::StreamWriter","","classes/Hoodoo/Logger/StreamWriter.html","","<p>Writes unstructured messages to (presumed) fast output streams such as\n+$stdout+. Hoodoo::Logger::FastWriter …\n"],["Hoodoo::Logger::WriterMixin","","classes/Hoodoo/Logger/WriterMixin.html","","<p>This mixin is used by Hoodoo::Logger::FastWriter and\nHoodoo::Logger::SlowWriter. See those two classes …\n"],["Hoodoo::Presenters","","classes/Hoodoo/Presenters.html","","<p>Module providing a namespace for schema-based data rendering and validation\ncode.\n"],["Hoodoo::Presenters::Array","","classes/Hoodoo/Presenters/Array.html","","<p>A JSON array schema member\n"],["Hoodoo::Presenters::Base","","classes/Hoodoo/Presenters/Base.html","","<p>Base functionality for JSON validation and presenter (rendering) layers.\nSubclass this to define a schema …\n"],["Hoodoo::Presenters::BaseDSL","","classes/Hoodoo/Presenters/BaseDSL.html","","<p>A mixin to be used by any presenter that wants to support the\nHoodoo::Presenters family of schema DSL …\n"],["Hoodoo::Presenters::Boolean","","classes/Hoodoo/Presenters/Boolean.html","","<p>A JSON boolean schema member\n"],["Hoodoo::Presenters::CommonResourceFields","","classes/Hoodoo/Presenters/CommonResourceFields.html","","<p>Used internally for additional validation of common Resource fields. See\nHoodoo::Presenters::Base::validate …\n"],["Hoodoo::Presenters::Date","","classes/Hoodoo/Presenters/Date.html","","<p>A JSON date schema member\n"],["Hoodoo::Presenters::DateTime","","classes/Hoodoo/Presenters/DateTime.html","","<p>A JSON datetime schema member\n"],["Hoodoo::Presenters::Decimal","","classes/Hoodoo/Presenters/Decimal.html","","<p>A JSON decimal schema member\n"],["Hoodoo::Presenters::Enum","","classes/Hoodoo/Presenters/Enum.html","","<p>A JSON string schema member. An enumeration (of sorts) - a list of discrete\nstring values that are permitted …\n"],["Hoodoo::Presenters::Field","","classes/Hoodoo/Presenters/Field.html","","<p>A JSON schema member\n"],["Hoodoo::Presenters::Float","","classes/Hoodoo/Presenters/Float.html","","<p>A JSON float schema member\n"],["Hoodoo::Presenters::Hash","","classes/Hoodoo/Presenters/Hash.html","","<p>A JSON hash schema member\n"],["Hoodoo::Presenters::Integer","","classes/Hoodoo/Presenters/Integer.html","","<p>A JSON integer schema member\n"],["Hoodoo::Presenters::Object","","classes/Hoodoo/Presenters/Object.html","","<p>A JSON object schema member\n"],["Hoodoo::Presenters::String","","classes/Hoodoo/Presenters/String.html","","<p>A JSON string schema member\n"],["Hoodoo::Presenters::Tags","","classes/Hoodoo/Presenters/Tags.html","","<p>A JSON UUID schema member\n"],["Hoodoo::Presenters::Text","","classes/Hoodoo/Presenters/Text.html","","<p>A JSON string schema member - unlimited length string\n"],["Hoodoo::Presenters::UUID","","classes/Hoodoo/Presenters/UUID.html","","<p>A JSON UUID schema member\n"],["Hoodoo::Services","","classes/Hoodoo/Services.html","","<p>Module providing a namespace for code useful to client service applications\nand the supporting middleware. …\n"],["Hoodoo::Services::Context","","classes/Hoodoo/Services/Context.html","","<p>A collection of objects which describe the context in which a service is\nbeing called. The service reads …\n"],["Hoodoo::Services::Implementation","","classes/Hoodoo/Services/Implementation.html","","<p>Service authors subclass this to produce the body of their service\ninterface implementation. It defines …\n"],["Hoodoo::Services::Interface","","classes/Hoodoo/Services/Interface.html","","<p>Service implementation authors subclass this to describe the interface that\nthey implement for a particular …\n"],["Hoodoo::Services::Interface::ToList","","classes/Hoodoo/Services/Interface/ToList.html","","<p>A class containing a series of accessors that describe allowed parameters\nin a “list” call …\n"],["Hoodoo::Services::Interface::ToListDSL","","classes/Hoodoo/Services/Interface/ToListDSL.html","","<p>Implementation of the DSL that&#39;s written inside a block passed to\nHoodoo::Services::Interface#to_list …\n"],["Hoodoo::Services::Middleware","","classes/Hoodoo/Services/Middleware.html","","<p>Rack middleware, declared in (e.g.) a <code>config.ru</code> file in the\nusual way:\n\n<pre><code>use( Hoodoo::Services::Middleware ...</code></pre>\n"],["Hoodoo::Services::Middleware::AMQPLogMessage","","classes/Hoodoo/Services/Middleware/AMQPLogMessage.html","","<p>For AMQEndpoint gem users, the AMQPLogMessage class provides an\nAMQEndpoint::Message subclass used for …\n"],["Hoodoo::Services::Middleware::AMQPLogMessage::AMQEndpoint","","classes/Hoodoo/Services/Middleware/AMQPLogMessage/AMQEndpoint.html","","<p>This documentation exists purely to work around an RDoc hiccup where it\nthinks such a module exists. …\n"],["Hoodoo::Services::Middleware::AMQPLogWriter","","classes/Hoodoo/Services/Middleware/AMQPLogWriter.html","","<p>Log writer which sends structured messages to an AMQP-based queue via the\nAlchemy and AMQEndpoint gems. …\n"],["Hoodoo::Services::Middleware::Endpoint","","classes/Hoodoo/Services/Middleware/Endpoint.html","","<p>Representation of a callable service endpoint for a specific resource. When\nthe implementation of one …\n"],["Hoodoo::Services::Middleware::Endpoint::AugmentedArray","","classes/Hoodoo/Services/Middleware/Endpoint/AugmentedArray.html","","<p>Ruby standard library Array subclass which mixes in\nHoodoo::Services::Middleware::Endpoint::AugmentedBase …\n"],["Hoodoo::Services::Middleware::Endpoint::AugmentedBase","","classes/Hoodoo/Services/Middleware/Endpoint/AugmentedBase.html","","<p>Base mixin for Hoodoo::Services::Middleware::Endpoint::AugmentedHash and\nHoodoo::Services::Middleware::Endpoint::AugmentedArray …\n"],["Hoodoo::Services::Middleware::Endpoint::AugmentedHash","","classes/Hoodoo/Services/Middleware/Endpoint/AugmentedHash.html","","<p>Ruby standard library Hash subclass which mixes in\nHoodoo::Services::Middleware::Endpoint::AugmentedBase …\n"],["Hoodoo::Services::Middleware::ExceptionReporting","","classes/Hoodoo/Services/Middleware/ExceptionReporting.html","","<p>Exception reporting / monitoring through external services.\n"],["Hoodoo::Services::Middleware::ExceptionReporting::AirbrakeReporter","","classes/Hoodoo/Services/Middleware/ExceptionReporting/AirbrakeReporter.html","","<p>Hoodoo::Services::Middleware::ExceptionReporting::BaseReporter subclass\ngiving Hoodoo::Services::Middleware::ExceptionReporting …\n"],["Hoodoo::Services::Middleware::ExceptionReporting::BaseReporter","","classes/Hoodoo/Services/Middleware/ExceptionReporting/BaseReporter.html","","<p>Subclass this method to create a custom class used to contact external\nexception monitoring / reporting …\n"],["Hoodoo::Services::Middleware::ExceptionReporting::Payload","","classes/Hoodoo/Services/Middleware/ExceptionReporting/Payload.html","","<p>Implementation detail of Hoodoo::Services::Middleware::ExceptionReporting\nused to carry multiple parameters …\n"],["Hoodoo::Services::Middleware::ExceptionReporting::RaygunReporter","","classes/Hoodoo/Services/Middleware/ExceptionReporting/RaygunReporter.html","","<p>Hoodoo::Services::Middleware::ExceptionReporting::BaseReporter subclass\ngiving Hoodoo::Services::Middleware::ExceptionReporting …\n"],["Hoodoo::Services::Middleware::Interaction","","classes/Hoodoo/Services/Middleware/Interaction.html","","<p>Encapsulate all data related to an interaction (API call) within one\nobject.\n"],["Hoodoo::Services::Middleware::ServiceRegistryDRbServer","","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html","","<p>A registry of service endpoints, implenented as a DRB server class. An\ninternal implementation detail …\n"],["Hoodoo::Services::Permissions","","classes/Hoodoo/Services/Permissions.html","","<p>The Permissions class provides a way to store and recall information on\naction behaviour for resources. …\n"],["Hoodoo::Services::Request","","classes/Hoodoo/Services/Request.html","","<p>Instances of the Hoodoo::Services::Request class are passed to service\ninterface implementations when …\n"],["Hoodoo::Services::Request::ListParameters","","classes/Hoodoo/Services/Request/ListParameters.html","","<p>Encapsulation of all parameters related only to modifying a list of\nresults. Other parameters may modify …\n"],["Hoodoo::Services::Response","","classes/Hoodoo/Services/Response.html","","<p>The service middleware creates a Hoodoo::Services::Response instance for\neach request it handles, populating …\n"],["Hoodoo::Services::Service","","classes/Hoodoo/Services/Service.html","","<p>Hoodoo::Services::Service is subclassed by people writing service\nimplementations; the subclasses are …\n"],["Hoodoo::Services::Session","","classes/Hoodoo/Services/Session.html","","<p>A container for functionality related to a context session.\n"],["Hoodoo::Services::Session::MockDalliClient","","classes/Hoodoo/Services/Session/MockDalliClient.html","","<p>Mock known uses of Dalli::Client with test implementations. Use explicitly,\nor as an RSpec implicit mock …\n"],["Hoodoo::StringInquirer","","classes/Hoodoo/StringInquirer.html","","<p>Given a string, provides an object that takes the string&#39;s value and\nturns it into a method “#{value}?”, …\n"],["Hoodoo::UUID","","classes/Hoodoo/UUID.html","","<p>Class that handles generation and validation of UUIDs. Whenever you want to\nassociate an identifier with …\n"],["Hoodoo::Utilities","","classes/Hoodoo/Utilities.html","","<p>Useful tools, especially for those working without Rails components.\n"],["Rack","","classes/Rack.html","","<p>Part of the Rack monkey patch. See file “rack_monkey_path.rb”&#39;s\ndocumentation for details. …\n"],["Rack::Server","","classes/Rack/Server.html","","<p>Part of the Rack monkey patch. See file “rack_monkey_path.rb”&#39;s\ndocumentation for details. …\n"],["UuidValidator","","classes/UuidValidator.html","","<p>Provides simple UUID validation via an ActiveModel::EachValidator. Uuid is\nnot capitalised as ActiveModel&#39;s …\n"],["<<","Hoodoo::Communicators::Pool::QueueWithTimeout","classes/Hoodoo/Communicators/Pool/QueueWithTimeout.html#method-i-3C-3C","( entry )","<p>Push a new entry to the end of the queue.\n<p><code>entry</code> &mdash; Entry to put onto the end of the queue.\n\n"],["acquire","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-acquire","( ident )","<p>“Polymorphic” find - support for finding a model by fields other than just\n<code>:id</code>, based on a …\n"],["acquire_in","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-acquire_in","( context )","<p>Implicily secure version of #acquire.\n<p>Assuming you are using or at some point intend to use the mechanism …\n"],["acquire_with","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-acquire_with","( *args )","<p>Describe the list of model fields <em>in</em> <em>addition</em> <em>to</em>\n<code>id</code> which are to be used to “find-by-identifier” …\n"],["actions","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-actions","( *supported_actions )","<p>List the actions that the service implementation supports. If you don&#39;t\ncall this, the middleware …\n"],["add","Hoodoo::Communicators::Pool","classes/Hoodoo/Communicators/Pool.html#method-i-add","( communicator )","<p>Add a communicator instance to the pool. Future calls to #communicate will\ncall the same-named method …\n"],["add","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-add","( *writer_instances )","<p>Add a new writer instance to this logger. Example:\n\n<pre><code>file_writer   = Hoodoo::Logger::FileWriter.new( &#39;output.log&#39; ...</code></pre>\n"],["add","Hoodoo::Services::Middleware::ExceptionReporting","classes/Hoodoo/Services/Middleware/ExceptionReporting.html#method-c-add","( klass )","<p>Add an exception reporter class to the set of reporters. See the\nHoodoo::Services::Middleware::ExceptionReporting::BaseReporter …\n"],["add","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-i-add","( resource, version, uri )","<p>Add an endpoint to the list. If the endpoint was already added, it will be\noverwritten with the new data. …\n"],["add_error","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-add_error","( code, options = nil )","<p>Add an error instance to this collection.\n<p><code>code</code> &mdash; Error code in full, e.g. +generic.invalid_state&#39;.\n<p><code>options</code> … &mdash; "],["add_error","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-add_error","( code, options = nil )","<p>Add an error to the internal collection. Passes input parameters through to\nHoodoo::Errors#add_error …\n"],["add_errors","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-add_errors","( errors_object )","<p>Add errors from a Hoodoo::Errors instance to this response&#39;s error\ncollection.\n<p><code>errors_object</code> &mdash; Hoodoo::Errors …\n\n"],["add_header","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-add_header","( name, value, overwrite = false )","<p>Add an HTTP header to the internal collection that will be used for the\nresponse. Trying to set data …\n"],["add_precompiled_error","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-add_precompiled_error","( code, message, reference, http_status = 500 )","<p>Add a precompiled error to the error collection. Pass error code, error\nmessage and reference data directly. …\n"],["add_precompiled_error","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-add_precompiled_error","( code, message, reference, http_status = 500 )","<p>Add a precompiled error to the error collection. Pass error code, error\nmessage and reference data directly. …\n"],["additional_permissions_for","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-additional_permissions_for","( action, &block )","<p>Declare additional permissions that you require for a given action.\n<p>If the implementation of a resource …\n"],["adds_errors_to?","Hoodoo::ActiveRecord::ErrorMapping","classes/Hoodoo/ActiveRecord/ErrorMapping.html#method-i-adds_errors_to-3F","( collection, validate = true )","<p>Validates the model instance and adds mapped-to-platform errors to a given\nHoodoo::Errors instance, if …\n"],["adds_errors_to?","Hoodoo::Services::Middleware::Endpoint::AugmentedBase","classes/Hoodoo/Services/Middleware/Endpoint/AugmentedBase.html#method-i-adds_errors_to-3F","( collection )","<p>Adds errors set via #set_platform_errors to the given Hoodoo::Errors\ninstance. Generally, #set_platform_errors …\n"],["array","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-array","( name, options = {}, &block )","<p>Define a JSON array with the supplied name and options. If there is a block\nprovided, then more DSL calls …\n"],["augment_session_with_permissions_for_action","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-augment_session_with_permissions_for_action","( interaction )","<p>Take the current session (if any) and create an interim augmented session\nfor an inter-resource call …\n"],["boolean","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-boolean","(name, options = {})","<p>Define a JSON boolean with the supplied name and options Params\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["bypass","Hoodoo::Services::Session::MockDalliClient","classes/Hoodoo/Services/Session/MockDalliClient.html#method-c-bypass","( bypass_boolean )","<p>Pass <code>true</code> to bypass the mock client (subject to the caller\nreading ::bypass?) to e.g. get test code coverage …\n"],["bypass?","Hoodoo::Services::Session::MockDalliClient","classes/Hoodoo/Services/Session/MockDalliClient.html#method-c-bypass-3F","()","<p>If <code>true</code>, bypass this class and use real Dalli::Client; else\ndon&#39;t. Default return value is <code>false</code> …\n"],["call","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-call","( env )","<p>Run a Rack request, returning the [status, headers, body-array] data as per\nthe Rack protocol requirements. …\n"],["call","Hoodoo::Services::Service","classes/Hoodoo/Services/Service.html#method-i-call","( env )","<p>Since service implementations are not pure Rack apps but really service\nmiddleware clients, they shouldn&#39;t …\n"],["clear_errors","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-clear_errors","()","<p>Clear (delete) all previously added errors (if any). After calling here,\n#has_errors? would always return …\n"],["communicate","Hoodoo::Communicators::Fast","classes/Hoodoo/Communicators/Fast.html#method-i-communicate","( object )","<p>Communicate quickly with the piece of external software for which your\nsubclass is designed. Subclasses …\n"],["communicate","Hoodoo::Communicators::Pool","classes/Hoodoo/Communicators/Pool.html#method-i-communicate","( object )","<p>Call the #communicate method on each communicator instance added via #add.\nEach instance is called in …\n"],["communicate","Hoodoo::Communicators::Slow","classes/Hoodoo/Communicators/Slow.html#method-i-communicate","( object )","<p>Communicate (possibly slowly) with the piece of external software for which\nyour subclass is designed. …\n"],["communicate","Hoodoo::Logger::Communicator","classes/Hoodoo/Logger/Communicator.html#method-i-communicate","( payload )","<p>Implement Hoodoo::Communicators::Base#communicate for both slow and fast\nwriters. Assumes it will be …\n"],["communicate","Hoodoo::Services::Middleware::ExceptionReporting::BaseReporter","classes/Hoodoo/Services/Middleware/ExceptionReporting/BaseReporter.html#method-i-communicate","( object )","<p>Subclasses <strong>MUST</strong> <strong>NOT</strong> override this method,\nwhich is part of the base class implementation and implements …\n"],["component_interfaces","Hoodoo::Services::Service","classes/Hoodoo/Services/Service.html#method-c-component_interfaces","()","<p>Return an array of the classes that make up the interfaces for this\nservice. Each is a Hoodoo::Services::Interface …\n"],["component_interfaces","Hoodoo::Services::Service","classes/Hoodoo/Services/Service.html#method-i-component_interfaces","()","<p>Instance method which calls through to ::component_interfaces and returns\nits result.\n"],["comprised_of","Hoodoo::Services::Service","classes/Hoodoo/Services/Service.html#method-c-comprised_of","( *classes )","<p>Called by subclasses listing one or more Hoodoo::Services::Interface\nsubclasses that make up the service …\n"],["create","Hoodoo::Services::Implementation","classes/Hoodoo/Services/Implementation.html#method-i-create","( context )","<p>Implement a “create” action (store one new resource instance).\n<p><code>context</code> &mdash; Hoodoo::Services::Context …\n\n"],["create","Hoodoo::Services::Middleware::Endpoint","classes/Hoodoo/Services/Middleware/Endpoint.html#method-i-create","( body_hash, query_hash = nil )","<p>Create a resource instance.\n<p><code>body_hash</code> &mdash; See #initialize.\n<p><code>query_hash</code> &mdash; See #initialize.\n"],["dataset_size","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-dataset_size","()","<p>Given some scope - typically that obtained from a prior call to #list or\n#list_in, with possibly other …\n"],["date","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-date","(name, options = {})","<p>Define a JSON date with the supplied name and options Params\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["datetime","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-datetime","(name, options = {})","<p>Define a JSON datetime with the supplied name and options Params\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["debug","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-debug","( *args )","<p>Write a <code>debug</code> log message, provided the log level is\n<code>:debug</code>.\n<p>The logging data is unstructured, but gets …\n"],["decimal","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-decimal","(name, options = {})","<p>Define a JSON decimal with the supplied name and options Params\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["deep_merge_into","Hoodoo::Utilities","classes/Hoodoo/Utilities.html#method-c-deep_merge_into","( target_hash, inbound_hash )","<p>Deep merge two hashes.\n<p>Hash#merge/merge! only do a shallow merge. For example, without a block,\nwhen starting …\n"],["default","Hoodoo::Services::Interface::ToListDSL","classes/Hoodoo/Services/Interface/ToListDSL.html#method-i-default","( sort_key )","<p>Used in conjunction with #sort. Specifies that a sort key should be the\ndefault sort order for the interface. …\n"],["default_sort_direction","Hoodoo::Services::Interface::ToList","classes/Hoodoo/Services/Interface/ToList.html#method-i-default_sort_direction","()","<p>Default sort direction.\n"],["delete","Hoodoo::Services::Implementation","classes/Hoodoo/Services/Implementation.html#method-i-delete","( context )","<p>Implement a “delete” action (delete one existing resource instance).\n<p><code>context</code> &mdash; Hoodoo::Services::Context …\n\n"],["delete","Hoodoo::Services::Middleware::Endpoint","classes/Hoodoo/Services/Middleware/Endpoint.html#method-i-delete","( ident, query_hash = nil )","<p>Delete a resource instance.\n<p><code>ident</code> &mdash; See #initialize.\n<p><code>query_hash</code> &mdash; See #initialize.\n"],["delete","Hoodoo::Services::Session::MockDalliClient","classes/Hoodoo/Services/Session/MockDalliClient.html#method-i-delete","( key )","<p>Remove data for the given key.\n"],["delete_from_memcached","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-delete_from_memcached","()","<p>Delete this session from Memcached. The Session object is not modified.\n<p>Return values are:\n<p><code>true</code>:  The  …\n"],["describe","Hoodoo::ErrorDescriptions","classes/Hoodoo/ErrorDescriptions.html#method-i-describe","( code )","<p>Return the options description hash, as passed to <code>error</code> calls\nin the block given to #errors_for, for …\n"],["deserialize","Hoodoo::Services::Middleware::AMQPLogMessage","classes/Hoodoo/Services/Middleware/AMQPLogMessage.html#method-i-deserialize","()","<p>Unpack a serialized representation into this instance. See the AMQEndpoint\ngem and AMQEndpoint::Message#deserialize …\n"],["dropped","Hoodoo::Communicators::Slow","classes/Hoodoo/Communicators/Slow.html#method-i-dropped","( count )","<p>This method is called <em>before</em> #communicate if messages have been\ndropped prior to the one which #communicate …\n"],["dropped","Hoodoo::Logger::Communicator","classes/Hoodoo/Logger/Communicator.html#method-i-dropped","( number )","<p>Implement optional method Hoodoo::Communicators::Slow#dropped on behalf of\nsubclasses. The method turns …\n"],["dropped?","Hoodoo::Communicators::Pool::QueueEntry","classes/Hoodoo/Communicators/Pool/QueueEntry.html#method-i-dropped-3F","()","<p>Returns <code>true</code> if this queue entry represents a dropped message\ncount (see #dropped), else +false (see …\n"],["embeds","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-embeds","( *embeds )","<p>An array of supported embed keys (as per documentation, so singular or\nplural as per resource interface …\n"],["endpoint","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-endpoint","( uri_path_fragment, implementation_class )","<p>Mandatory part of the interface DSL. Declare the interface&#39;s URL\nendpoint and the Hoodoo::Services::Implementation …\n"],["enum","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-enum","(name, options = {})","<p>Define a JSON string which can only have a restricted set of exactly\nmatched values, with the supplied …\n"],["environment","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-environment","()","<p>Utility - returns the execution environment as a Rails-like environment\nobject which answers queries …\n"],["error","Hoodoo::ErrorDescriptions::DomainDescriptions","classes/Hoodoo/ErrorDescriptions/DomainDescriptions.html#method-i-error","( name, options )","<p>Describe an error.\n<p><code>name</code> &mdash; The error name - the bit after the “<code>.</code>” in the code, e.g.\n<code>invalid_parameters</code> …\n"],["error","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-error","( *args )","<p>Write an <code>error</code> log message, regardless of logging level.\n<p>The logging data is unstructured, but gets passed …\n"],["errors_for","Hoodoo::ErrorDescriptions","classes/Hoodoo/ErrorDescriptions.html#method-i-errors_for","( domain, &block )","<p>Implement the collection&#39;s part of the small DSL used for error\ndeclaration. Call here, passing the …\n"],["errors_for","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-errors_for","( domain, &block )","<p>Declares custom errors that are part of this defined interface. This calls\ndirectly through to Hoodoo::ErrorDescriptions#errors_for …\n"],["expired?","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-expired-3F","()","<p>Has this session expired? Only valid if an expiry date is set; see\n#expires_at.\n<p>Returns <code>true</code> if the session …\n"],["filter","Hoodoo::Services::Interface::ToListDSL","classes/Hoodoo/Services/Interface/ToListDSL.html#method-i-filter","( *filter )","<p>As #search, but for filtering.\n<p><code>filter</code> &mdash; Array of permitted filter keys, as symbols or strings. The order …\n\n"],["filter_with","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-filter_with","( map )","<p>As #search_with, but used in <code>where.not</code> queries.\n<p><code>map</code> &mdash; As #search_with.\n\n"],["find","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-i-find","( resource, version )","<p>Find an endpoint in the list. Returns URI at which the service may be\naccessed as a String, or &#39;nil&#39; …\n"],["flatten","Hoodoo::Logger::FlattenerMixin","classes/Hoodoo/Logger/FlattenerMixin.html#method-i-flatten","( log_level, component, code, data )","<p>Take the parameters from Hoodoo::Logger::WriterMixin#report and return a\nsingle line string representing …\n"],["float","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-float","(name, options = {})","<p>Define a JSON float with the supplied name and options Params\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["flush","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-i-flush","()","<p>Flush out the repository, clearing all stored service records. This is\nusually for test purposes only. …\n"],["flush_services_for_test","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-flush_services_for_test","()","<p>For test purposes, dump the internal service records and flush the DRb\nservice. if it is running (exceptions …\n"],["for_rack","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-for_rack","()","<p>Convert the internal response data into something that Rack expects. The\nreturn value of this method …\n"],["from_h!","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-from_h-21","( hash )","<p>Overwrite this instances&#39;s permissions with those from the given Hash.\n<p><code>hash</code> &mdash; Permissions hash, which …\n\n"],["from_h!","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-from_h-21","( hash )","<p>Load session parameters from a given Hash, of the form set by #to_h.\n<p>If appropriate Hash keys are present, …\n"],["full_path","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-i-full_path","(path)","<p>Return the full path and name of this field\n<p><code>path</code> &mdash; The JSON path or nil, e.g. &#39;one.two&#39;\n\n"],["generate","Hoodoo::UUID","classes/Hoodoo/UUID.html#method-c-generate","()","<p>Generate a unique identifier. Returns a 32 character string.\n"],["get","Hoodoo::Services::Session::MockDalliClient","classes/Hoodoo/Services/Session/MockDalliClient.html#method-i-get","( key )","<p>Get the data stored under the given key. Returns <code>nil</code> if not\nfound / expired.\n<p><code>key</code> &mdash; Key to look up (see  …\n\n"],["get_header","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-get_header","( name )","<p>Check the stored value of a given HTTP header. Checks are case insensitive.\nReturns the value stored …\n"],["get_schema","Hoodoo::Presenters::Base","classes/Hoodoo/Presenters/Base.html#method-c-get_schema","()","<p>Return the schema graph. See also ::get_schema_definition.\n"],["get_schema_definition","Hoodoo::Presenters::Base","classes/Hoodoo/Presenters/Base.html#method-c-get_schema_definition","()","<p>Read back the block that defined the schema graph. See also ::get_schema.\n"],["halt_processing?","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-halt_processing-3F","()","<p>Returns <code>true</code> if processing should halt, e.g. because errors\nhave been added to the errors collection. …\n"],["has_default?","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-i-has_default-3F","()","<p>Does this property have a defined default (which may be defined as\n<code>nil</code>) rather than having no defined …\n"],["has_errors?","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-has_errors-3F","()","<p>Does this instance have any errors added? Returns <code>true</code> if so,\nelse <code>false</code>.\n"],["has_memcached?","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-has_memcached-3F","()","<p>Do we have Memcached available? If not, assume local development with\nhigher level queue services not …\n"],["hash","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-hash","( name, options = {}, &block )","<p>Define a JSON object with the supplied name and optional constraints on\nproperties (like hash keys) and …\n"],["headers","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-headers","()","<p>Returns the list previously set headers in a name: value Hash.\n"],["identity=","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-identity-3D","( hash )","<p>Set the identity data via a Hash of key/value pairs - see also #identity.\n"],["included","Hoodoo::ActiveRecord::Finder","classes/Hoodoo/ActiveRecord/Finder.html#method-c-included","( model )","<p>Instantiates this module when it is included:\n<p>Example:\n\n<pre><code>class SomeModel &lt; ActiveRecord::Base\n  include Hoodoo::ActiveRecord::Finder ...</code></pre>\n"],["included","Hoodoo::ActiveRecord::Secure","classes/Hoodoo/ActiveRecord/Secure.html#method-c-included","( model )","<p>Instantiates this module when it is included:\n<p>Example:\n\n<pre><code>class SomeModel &lt; ActiveRecord::Base\n  include Hoodoo::ActiveRecord::Secure ...</code></pre>\n"],["included","Hoodoo::ActiveRecord::UUID","classes/Hoodoo/ActiveRecord/UUID.html#method-c-included","( model )","<p>Instantiates this module when it is included:\n<p>Example:\n\n<pre><code>class SomeModel &lt; ActiveRecord::Base\n  include Hoodoo::ActiveRecord::UUID ...</code></pre>\n"],["info","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-info","( *args )","<p>Write an <code>info</code> log message, provided the log level is\n<code>:debug</code> or <code>:info</code>.\n<p>The logging data is unstructured, …\n"],["inherited","Hoodoo::ActiveRecord::Base","classes/Hoodoo/ActiveRecord/Base.html#method-c-inherited","( model )","<p>Instantiates all the ActiveRecord mixins when this class is inherited.\n<p><code>model</code> &mdash; The ActiveRecord::Base descendant …\n\n"],["inspect","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-inspect","()","<p>Make life easier for debugging on the console by having the object\nrepresent itself more concisely.\n"],["instances","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-instances","()","<p>Returns an array of all log writer instances currently in use, in order of\naddition. See #add.\n"],["instantiate","Hoodoo::ActiveRecord::Finder","classes/Hoodoo/ActiveRecord/Finder.html#method-c-instantiate","( model )","<p>When instantiated in an ActiveRecord::Base subclass, all of the\nHoodoo::ActiveRecord::Finder::ClassMethods …\n"],["instantiate","Hoodoo::ActiveRecord::Secure","classes/Hoodoo/ActiveRecord/Secure.html#method-c-instantiate","( model )","<p>When instantiated in an ActiveRecord::Base subclass, all of the\nHoodoo::ActiveRecord::Secure::ClassMethods …\n"],["instantiate","Hoodoo::ActiveRecord::UUID","classes/Hoodoo/ActiveRecord/UUID.html#method-c-instantiate","( model )","<p>When called, this method:\n<p>Declares &#39;id&#39; as the primary key\n<p>Self-assigns a UUID to &#39;id&#39; …\n"],["integer","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-integer","(name, options = {})","<p>Define a JSON integer with the supplied name and options Params\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["inter_resource","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-inter_resource","( options )","<p>Perform an inter-resource call. This shouldn&#39;t be called directly; call\nvia the Hoodoo::Services::Middleware::Endpoint …\n"],["inter_resource_local","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-inter_resource_local","( options )","<p>Make a local (non-HTTP local Ruby method call) inter-resource call. Fast.\n<p><code>options</code> &mdash; See #inter_resource …\n"],["inter_resource_remote","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-inter_resource_remote","( options )","<p>Make a remote (HTTP) inter-resource call. Slow.\n<p><code>options</code> &mdash; See #inter_resource.\n<p>Returns &mdash; See #inter_resource …\n"],["interface","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-c-interface","( resource, &block )","<p>Define the subclass Service&#39;s interface. A DSL is used with methods\ndocumented in the Hoodoo::Services::InterfaceDSL …\n"],["interface","Hoodoo::Services::Middleware::Endpoint","classes/Hoodoo/Services/Middleware/Endpoint.html#method-i-interface","()","<p>Find out the service interface class being used by this instance. If\n<code>nil</code>, the interface is remote - it …\n"],["internationalised","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-internationalised","( options = nil )","<p>Declares that this Type or Resource contains fields which will may carry\nhuman-readable data subject …\n"],["is_internationalised?","Hoodoo::Presenters::Base","classes/Hoodoo/Presenters/Base.html#method-c-is_internationalised-3F","()","<p>Does this presenter use internationalisation? Returns <code>true</code> if\nso, else <code>false</code>.\n"],["is_internationalised?","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-is_internationalised-3F","()","<p>An enquiry method related to, but not part of the DSL; returns\n<code>true</code> if the schema instance is internationalised, …\n"],["key","Hoodoo::Presenters::Hash","classes/Hoodoo/Presenters/Hash.html#method-i-key","(name, options = {}, &block)","<p>Hash DSL: Define a specific named key that is allowed (or even required) in\nthe hash. The optional block …\n"],["keys","Hoodoo::Presenters::Hash","classes/Hoodoo/Presenters/Hash.html#method-i-keys","( options = {}, &block )","<p>Hash DSL: Define general parameters allowed for keys in a Hash and, if a\nblock is given, use Hoodoo::Presenters::BaseDSL …\n"],["limit","Hoodoo::Services::Interface::ToListDSL","classes/Hoodoo/Services/Interface/ToListDSL.html#method-i-limit","( limit )","<p>Specify the page size (limit) for lists.\n<p><code>limit</code> &mdash; Page size (integer).\n\n<p>Example:\n"],["list","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-list","( list_parameters )","<p>Generate an ActiveRecord::Relation instance which can be used to count,\nretrieve or further refine a …\n"],["list","Hoodoo::Services::Implementation","classes/Hoodoo/Services/Implementation.html#method-i-list","( context )","<p>Implement a “list” action (paginated, sorted list of resources).\n<p><code>context</code> &mdash; Hoodoo::Services::Context …\n\n"],["list","Hoodoo::Services::Middleware::Endpoint","classes/Hoodoo/Services/Middleware/Endpoint.html#method-i-list","( query_hash = nil )","<p>Obtain a list of resource instance representations.\n<p><code>query_hash</code> &mdash; See #initialize. This is the only way to …\n\n"],["list_filter_map","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-list_filter_map","( map )","<p>Deprecated interface replaced by #filter_with (this is an alias).\n<p><code>map</code> &mdash; Passed to #filter_with.\n\n"],["list_finder","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-list_finder","( list_parameters )","<p>Deprecated interface replaced by #list (this is an alias).\n<p><code>list_parameters</code> &mdash; Passed to #list.\n\n"],["list_in","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-list_in","( context )","<p>Implicily secure version of #list.\n<p>Read the documentation on #acquire_in versus #acquire for information …\n"],["list_search_map","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-list_search_map","( map )","<p>Deprecated interface replaced by #search_with (this is an alias).\n<p><code>map</code> &mdash; Passed to #search_with.\n\n"],["load_from_memcached!","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-load_from_memcached-21","( sid )","<p>Load session data into this instance, overwriting instance values if the\nsession is found. Raises an …\n"],["local_service_for","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-local_service_for","( resource, version = 1 )","<p>Is the given resource available as a local endpoint in this service\napplication?\n<p><code>resource</code> &mdash; Resource name …\n"],["logger","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-logger","()","<p>Access the middleware&#39;s logging instance. Call <code>report</code> on\nthis to make structured log entries. See …\n"],["memcached_host","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-memcached_host","()","<p>Return a Memcached host (IP address/port combination) as a String if\ndefined in environment variable …\n"],["merge!","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-merge-21","( source )","<p>Merge the contents of a source error object with this one, adding its\nerrors to this collection. No checks …\n"],["merge!","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-merge-21","( hash )","<p>Merge the permissions described by the given Hash with those inside this\ninstance. This will add to, …\n"],["new","Hoodoo::Communicators::Pool","classes/Hoodoo/Communicators/Pool.html#method-c-new","()","<p>Create a new pool of communicators - instances of subclasses of\nHoodoo::Communicators::Fast or Hoodoo::Communicators::Slow …\n"],["new","Hoodoo::Communicators::Pool::QueueEntry","classes/Hoodoo/Communicators/Pool/QueueEntry.html#method-c-new","( payload: nil, dropped: nil, terminate: false, sync: false )","<p>Create a new instance, ready to be added to the Queue.\n<p><strong>ONLY</strong> <strong>USE</strong> <strong>ONE</strong> of the\nnamed parameters:\n<p><code>payload</code> &mdash; A …\n"],["new","Hoodoo::Communicators::Pool::QueueWithTimeout","classes/Hoodoo/Communicators/Pool/QueueWithTimeout.html#method-c-new","()","<p>Create a new instance.\n"],["new","Hoodoo::ErrorDescriptions","classes/Hoodoo/ErrorDescriptions.html#method-c-new","( domain = nil, &block )","<p>Create an instance, self-declaring <code>platform</code> and\n<code>generic</code> domain errors. You can optionally call the constructor\n…\n"],["new","Hoodoo::ErrorDescriptions::DomainDescriptions","classes/Hoodoo/ErrorDescriptions/DomainDescriptions.html#method-c-new","( domain )","<p>Initialize a new instance for the given domain.\n<p><code>domain</code> &mdash; The domain string - for most service-based callers, …\n\n"],["new","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-c-new","( descriptions = DEFAULT_ERROR_DESCRIPTIONS )","<p>Create an instance.\n<p><code>descriptions</code> &mdash; (Optional) Hoodoo::ErrorDescriptions instance with service-domain-specific\n…\n\n"],["new","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-c-new","( component = :Middleware )","<p>Create a new logger instance. Once created, use #add to add writers.\n<p><code>component</code> &mdash; Flat logging methods (see …\n\n"],["new","Hoodoo::Logger::Communicator","classes/Hoodoo/Logger/Communicator.html#method-c-new","( writer_instance, owning_logger )","<p>Create an instance of a logging communicator, based on the given log writer\nand owning logger instance. …\n"],["new","Hoodoo::Logger::FileWriter","classes/Hoodoo/Logger/FileWriter.html#method-c-new","( pathname )","<p>Create a file writer instance. Files are written by opening, adding a log\nmessage and closing again, …\n"],["new","Hoodoo::Logger::LogEntriesDotComWriter","classes/Hoodoo/Logger/LogEntriesDotComWriter.html#method-c-new","( token )","<p>Create a log writer instance.\n<p><code>token</code> &mdash; Your logentries.com API token.\n\n"],["new","Hoodoo::Logger::Payload","classes/Hoodoo/Logger/Payload.html#method-c-new","( log_level:, component:, code:, data: )","<p>Create an instance. Named parameters are:\n<p><code>log_level</code> &mdash; See Hoodoo::Logger#report.\n<p><code>component</code> &mdash; See Hoodoo::Logger#report …\n"],["new","Hoodoo::Logger::StreamWriter","classes/Hoodoo/Logger/StreamWriter.html#method-c-new","( output_stream = $stdout )","<p>Create a stream writer instance. Although you could initialize this class\nwith a slow output stream, …\n"],["new","Hoodoo::Presenters::Decimal","classes/Hoodoo/Presenters/Decimal.html#method-c-new","(name, options = {})","<p>Initialize a Decimal instance with the appropriate name and options\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of …\n"],["new","Hoodoo::Presenters::Enum","classes/Hoodoo/Presenters/Enum.html#method-c-new","(name, options = {})","<p>Initialize a String instance with the appropriate name and options\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of …\n"],["new","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-c-new","(name, options = {})","<p>Initialize a Field instance with the appropriate name and options\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["new","Hoodoo::Presenters::Object","classes/Hoodoo/Presenters/Object.html#method-c-new","(name = nil, options = {})","<p>Initialize an Object instance with the appropriate name and options\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of …\n"],["new","Hoodoo::Presenters::String","classes/Hoodoo/Presenters/String.html#method-c-new","(name, options = {})","<p>Initialize a String instance with the appropriate name and options\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of …\n"],["new","Hoodoo::Presenters::UUID","classes/Hoodoo/Presenters/UUID.html#method-c-new","(name, options = {})","<p>Initialize a UUID instance with the appropriate name and options\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["new","Hoodoo::Services::Context","classes/Hoodoo/Services/Context.html#method-c-new","( session, request, response, owning_interaction )","<p>Create a new instance. There is almost certainly never any need to call\nthis unless you&#39;re the Hoodoo::Services::Middleware::Interaction …\n"],["new","Hoodoo::Services::Interface::ToList","classes/Hoodoo/Services/Interface/ToList.html#method-c-new","()","<p>Create an instance with default settings.\n"],["new","Hoodoo::Services::Interface::ToListDSL","classes/Hoodoo/Services/Interface/ToListDSL.html#method-c-new","( hoodoo_interface_to_list_instance, &block )","<p>Initialize an instance and run the DSL methods.\n<p><code>hoodoo_interface_to_list_instance</code> &mdash; Instance of\n\n<pre><code>Hoodoo::Services::Interface::ToList ...</code></pre>\n"],["new","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-new","( app )","<p>Initialize the middleware instance.\n<p><code>app</code> Rack app instance to which calls should be passed.\n"],["new","Hoodoo::Services::Middleware::AMQPLogMessage","classes/Hoodoo/Services/Middleware/AMQPLogMessage.html#method-c-new","(options = {})","<p>Create an instance with options keyed on the attributes defined for the\nclass.\n"],["new","Hoodoo::Services::Middleware::AMQPLogWriter","classes/Hoodoo/Services/Middleware/AMQPLogWriter.html#method-c-new","( alchemy, queue_name = nil )","<p>Create an AMQP logger instance.\n<p><code>alchemy</code> &mdash; The Alchemy endpoint to use for sending messages to the AMQP-based …\n"],["new","Hoodoo::Services::Middleware::Endpoint","classes/Hoodoo/Services/Middleware/Endpoint.html#method-c-new","( owning_interaction, resource, version = 1 )","<p>Create an endpoint instance on behalf of a (presumed) use case of a service\nimplementation requesting …\n"],["new","Hoodoo::Services::Middleware::ExceptionReporting::Payload","classes/Hoodoo/Services/Middleware/ExceptionReporting/Payload.html#method-c-new","( exception:, rack_env: nil )","<p>Initialize this instance with named parameters:\n<p><code>exception</code> &mdash; Exception (or Exception subclass) instance. …\n"],["new","Hoodoo::Services::Middleware::Interaction","classes/Hoodoo/Services/Middleware/Interaction.html#method-c-new","( env, owning_middleware_instance, session = nil )","<p>Create a new Interaction instance, acquiring a new interaction ID\nautomatically or picking up one from …\n"],["new","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-c-new","()","<p>Create an instance ready for use as a DRb “front object”.\n"],["new","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-c-new","( hash = nil )","<p>Create a new Permissions instance, optionally from a Hash of the format\nreturned by #to_h.\n<p>By default …\n"],["new","Hoodoo::Services::Request","classes/Hoodoo/Services/Request.html#method-c-new","()","<p>Set up defaults in this instance.\n"],["new","Hoodoo::Services::Request::ListParameters","classes/Hoodoo/Services/Request/ListParameters.html#method-c-new","()","<p>Set up defaults in this instance.\n"],["new","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-c-new","( interaction_id )","<p>Create a new instance, ready to take on a response. The service middleware\nis responsible for doing this. …\n"],["new","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-c-new","( options = {} )","<p>Create a new instance.\n<p><code>options</code> &mdash; Optional Hash of options, described below.\n\n<p>Options are:\n"],["not_found","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-not_found","( ident )","<p>Set the standard not found error message (generic.not_found), to be used\ndurning a &#39;show&#39; call …\n"],["object","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-object","( name, options = {}, &block )","<p>Define a JSON object with the supplied name and options.\n<p><code>name</code> &mdash; The JSON key.\n<p><code>options</code> &mdash; Optional <code>Hash</code> of options, …\n"],["on_queue?","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-on_queue-3F","()","<p>Are we running on the queue, else (implied) a local HTTP server?\n"],["permitted?","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-permitted-3F","( resource_name, action_name )","<p>For the given resource, is the given action permitted? Returns one of the\nALLOW, DENY or ASK constant …\n"],["ping","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-i-ping","()","<p>Check to see if this DRb service is awake. Returns <code>true</code>.\n"],["platform_errors","Hoodoo::ActiveRecord::ErrorMapping","classes/Hoodoo/ActiveRecord/ErrorMapping.html#method-i-platform_errors","( validate = true )","<p>Validate the model instance and return a Hoodoo::Errors instance which\ncontains no platform errors if …\n"],["platform_errors","Hoodoo::Services::Middleware::Endpoint::AugmentedBase","classes/Hoodoo/Services/Middleware/Endpoint/AugmentedBase.html#method-i-platform_errors","()","<p>Returns a Hoodoo::Errors instance that&#39;s either been assigned via\n#set_platform_errors or is an empty, …\n"],["polymorphic_find","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-polymorphic_find","( finder, ident )","<p>Deprecated interface replaced by #acquire. Instead of:\n\n<pre><code>Model.polymorphic_find( foo, ident )\n</code></pre>\n<p>…use:\n"],["polymorphic_id_fields","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-polymorphic_id_fields","( *args )","<p>Deprecated interface replaced by #acquire_with (this is an alias).\n<p>*args &mdash; Passed to #acquire_with.\n\n"],["public_actions","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-public_actions","( *public_actions )","<p>List any actions which are public - NOT PROTECTED BY SESSIONS. For public\nactions, no X-Session-ID or …\n"],["racks_original_start","Rack::Server","classes/Rack/Server.html#method-c-racks_original_start","( options = nil )","<p>Part of the Rack monkey patch. Alias for the original Rack::Server::start.\n"],["read_at_path","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-i-read_at_path","( from_target, with_path )","<p>Dive down into a given target data hash using the given array of path keys,\nreturning the result at the …\n"],["recognised?","Hoodoo::ErrorDescriptions","classes/Hoodoo/ErrorDescriptions.html#method-i-recognised-3F","( code )","<p>Is the given error code recognised? Returns <code>true</code> if so, else\n<code>false</code>.\n<p><code>code</code> &mdash; Error code in full, e.g. +generic.invalid_state&#39;. …\n\n"],["record_host_and_port","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-record_host_and_port","( options = {} )","<p>Record internally the HTTP host and port during local development via e.g\n<code>rackup</code> or testing with rspec. …\n"],["remote_service_for","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-remote_service_for","( resource, version = 1 )","<p>Is the given resource available as a remote endpoint we can target via\nHTTP?\n<p><code>resource</code> &mdash; Resource name of …\n"],["remove","Hoodoo::Communicators::Pool","classes/Hoodoo/Communicators/Pool.html#method-i-remove","( communicator )","<p>Remove a communicator previously added by #add. See that for details.\n<p>It is harmless to try and remove …\n"],["remove","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-remove","( writer_instance )","<p>Remove a writer instance from this logger. If the instance has not been\npreviously added, no error is …\n"],["remove","Hoodoo::Services::Middleware::ExceptionReporting","classes/Hoodoo/Services/Middleware/ExceptionReporting.html#method-c-remove","( klass )","<p>Remove an exception reporter class from the set of reporters. See ::add for\ndetails.\n<p><code>klass</code> &mdash; Hoodoo::Services::Middleware::ExceptionReporting::BaseReporter …\n\n"],["remove_all","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-remove_all","()","<p>Remove all writer instances from this logger.\n<p>Slow writers may take a while to finish processing and shut …\n"],["rename","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-i-rename","( name )","<p>Rename a property to the given name. The internal name is changed and the\nlast path entry set to the …\n"],["render","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-render","( interaction_id )","<p>Return a Hash rendered through the Hoodoo::Data::Resources::Errors\ncollection representing the formalised …\n"],["render","Hoodoo::Presenters::Array","classes/Hoodoo/Presenters/Array.html#method-i-render","(data, target)","<p>Render an array into the target hash based on the internal state that\ndescribes this instance&#39;s current …\n"],["render","Hoodoo::Presenters::Base","classes/Hoodoo/Presenters/Base.html#method-c-render","( data, uuid = nil, created_at = nil, language = 'en-nz' )","<p>Given some data that should conform to the subclass presenter&#39;s schema,\nrender it to go from the …\n"],["render","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-i-render","(data, target)","<p>Dive down into a given hash along path array +@path+, building new hash\nentries if necessary at each …\n"],["render","Hoodoo::Presenters::Hash","classes/Hoodoo/Presenters/Hash.html#method-i-render","(data, target)","<p>Render a hash into the target hash based on the internal state that\ndescribes this instance&#39;s current …\n"],["render","Hoodoo::Presenters::Object","classes/Hoodoo/Presenters/Object.html#method-i-render","( data, target )","<p>Render inbound data into a target hash according to the schema, applying\ndefaults where defined for fields …\n"],["report","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-report","( log_level, component, code, data )","<p>Logs a message using the structured logger. Whether or not log data is\nwritten in a stuctured manner …\n"],["report","Hoodoo::Logger::FileWriter","classes/Hoodoo/Logger/FileWriter.html#method-i-report","( log_level, component, code, data )","<p>See Hoodoo::Logger::WriterMixin#report.\n"],["report","Hoodoo::Logger::LogEntriesDotComWriter","classes/Hoodoo/Logger/LogEntriesDotComWriter.html#method-i-report","( log_level, component, code, data )","<p>See Hoodoo::Logger::WriterMixin#report.\n"],["report","Hoodoo::Logger::StreamWriter","classes/Hoodoo/Logger/StreamWriter.html#method-i-report","( log_level, component, code, data )","<p>See Hoodoo::Logger::WriterMixin#report.\n"],["report","Hoodoo::Logger::WriterMixin","classes/Hoodoo/Logger/WriterMixin.html#method-i-report","( log_level, component, code, data )","<p>Hoodoo::Logger::FastWriter and Hoodoo::Logger::SlowWriter subclasses\nimplement this method.\n<p>Write a structured …\n"],["report","Hoodoo::Services::Middleware::AMQPLogWriter","classes/Hoodoo/Services/Middleware/AMQPLogWriter.html#method-i-report","( level, component, code, data )","<p>Custom implementation of the Hoodoo::Logger::WriterMixin#report interface.\nSee that method for parameter …\n"],["report","Hoodoo::Services::Middleware::ExceptionReporting","classes/Hoodoo/Services/Middleware/ExceptionReporting.html#method-c-report","( exception, rack_env = nil )","<p>Call all added exception reporters (see ::add) to report an exception.\n<p><code>exception</code> &mdash; Exception or Exception …\n"],["report","Hoodoo::Services::Middleware::ExceptionReporting::AirbrakeReporter","classes/Hoodoo/Services/Middleware/ExceptionReporting/AirbrakeReporter.html#method-i-report","( e, env = nil )","<p>Report an exception to Airbrake.\n<p><code>e</code> &mdash; Exception (or subclass) instance to be reported.\n<p><code>env</code> &mdash; Optional Rack environment …\n"],["report","Hoodoo::Services::Middleware::ExceptionReporting::BaseReporter","classes/Hoodoo/Services/Middleware/ExceptionReporting/BaseReporter.html#method-i-report","( e, env = nil )","<p>Subclasses implement this method. The middleware creates the singleton\ninstance of the subclass, then …\n"],["report","Hoodoo::Services::Middleware::ExceptionReporting::RaygunReporter","classes/Hoodoo/Services/Middleware/ExceptionReporting/RaygunReporter.html#method-i-report","( e, env = nil )","<p>Report an exception to Raygun.\n<p><code>e</code> &mdash; Exception (or subclass) instance to be reported.\n<p><code>env</code> &mdash; Optional Rack environment …\n"],["report?","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-report-3F","( log_level )","<p>Given the log level configuration of this instance - see #level= and #level\n- should a message of the …\n"],["reset","Hoodoo::Services::Session::MockDalliClient","classes/Hoodoo/Services/Session/MockDalliClient.html#method-c-reset","()","<p>Wipe out all saved data.\n"],["resource","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-resource","( resource_name, options = nil )","<p>Declare that a resource of a given name is included at this point. This is\nonly normally done within …\n"],["resource","Hoodoo::Services::Context","classes/Hoodoo/Services/Context.html#method-i-resource","( resource_name, version = 1 )","<p>Request (and lazy-initialize) a new resource endpoint instance for talking\nto a resource&#39;s interface. …\n"],["rewrite_path","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-i-rewrite_path","( depth, name )","<p>Change the +@path+ array by writing a given value in at a given index. If\nthis property has any sub-properties, …\n"],["run!","Hoodoo::Generator","classes/Hoodoo/Generator.html#method-i-run-21","( args )","<p>Run the <code>hoodoo</code> command implementation.\n<p><code>args</code> &mdash; Array of command line arguments, excluding the <code>hoodoo</code> command\n…\n\n"],["save_to_memcached","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-save_to_memcached","()","<p>Save this session to Memcached, in a manner that will allow it to be loaded\nby #load_from_memcached! …\n"],["schema","Hoodoo::Presenters::Base","classes/Hoodoo/Presenters/Base.html#method-c-schema","(&block)","<p>Define the JSON schema for validation.\n<p>&amp;block &mdash; Block that makes calls to the DSL defined in Hoodoo::Presenters::BaseDSL …\n\n"],["scoping=","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-scoping-3D","( hash )","<p>Set the scoping data via a Hash of key/value pairs - see also #scoping.\n"],["search","Hoodoo::Services::Interface::ToListDSL","classes/Hoodoo/Services/Interface/ToListDSL.html#method-i-search","( *search )","<p>Specify supported search keys in an array. The middleware will make sure\nthe interface implementation …\n"],["search_with","Hoodoo::ActiveRecord::Finder::ClassMethods","classes/Hoodoo/ActiveRecord/Finder/ClassMethods.html#method-i-search_with","( map )","<p>Specify a search mapping for use by #list_finder to automatically restrict\nlist results.\n<p>Simple example …\n"],["secure","Hoodoo::ActiveRecord::Secure::ClassMethods","classes/Hoodoo/ActiveRecord/Secure/ClassMethods.html#method-i-secure","( context )","<p>The core of out-of-the-box Hoodoo data access security.\n<p>In most non-trivial systems, people calling into …\n"],["secure_with","Hoodoo::ActiveRecord::Secure::ClassMethods","classes/Hoodoo/ActiveRecord/Secure/ClassMethods.html#method-i-secure_with","( map )","<p>Declare the mapping between database columns and Session scoping entries.\nSee #secure for details and …\n"],["serialize","Hoodoo::Services::Middleware::AMQPLogMessage","classes/Hoodoo/Services/Middleware/AMQPLogMessage.html#method-i-serialize","()","<p>Seralize this instance. See the AMQEndpoint gem and\nAMQEndpoint::Message#serialize.\n"],["set","Hoodoo::Services::Session::MockDalliClient","classes/Hoodoo/Services/Session/MockDalliClient.html#method-i-set","( key, value, ttl = nil )","<p>Set data for a given key.\n<p><code>key</code> &mdash; Key under which to store data.\n<p><code>value</code> &mdash; Data to store.\n"],["set_default","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-set_default","( action_name, permission )","<p>Set the default permission for the given action. If a resource does not\nhave a specific entry for it …\n"],["set_default_fallback","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-set_default_fallback","( permission )","<p>Set the default fallback for actions. If a resource does not have a\nspecific entry for it in the Permissions …\n"],["set_log_folder","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-set_log_folder","( base_path )","<p>If using the middleware logger (see ::logger) with no external custom\nlogger set up (see ::set_logger …\n"],["set_logger","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-set_logger","( logger )","<p>The middleware sets up a logger itself (see ::logger) with various log\nmechanisms set up (mostly) without …\n"],["set_platform_errors","Hoodoo::Services::Middleware::Endpoint::AugmentedBase","classes/Hoodoo/Services/Middleware/Endpoint/AugmentedBase.html#method-i-set_platform_errors","( errors )","<p>Sets the Hoodoo::Errors instance used by #adds_errors_to? or returned by\n#platform_errors.\n<p>It is expected …\n"],["set_resource","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-set_resource","( resource_name, action_name, permission )","<p>Set the permissions an action on a resource.\n<p><code>resource_name</code> &mdash; Resource name as a Symbol or String, e.g. “ …\n"],["set_resource_fallback","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-set_resource_fallback","( resource_name, permission )","<p>Set the default fallback for a resource. If the resource is asked to\nperform an action that&#39;s not …\n"],["set_resources","Hoodoo::Services::Response","classes/Hoodoo/Services/Response.html#method-i-set_resources","( array, dataset_size = nil )","<p>Similar to #body and #set_resource, but used when you are returning an\narray of items. Although you can …\n"],["set_test_session","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-set_test_session","( session )","<p>Set the test session instance. See ::test_session for details.\n<p><code>session</code> &mdash; A Hoodoo::Services::Session instance …\n\n"],["shift","Hoodoo::Communicators::Pool::QueueWithTimeout","classes/Hoodoo/Communicators/Pool/QueueWithTimeout.html#method-i-shift","( timeout = nil )","<p>Take an entry from the front of the queue (FIFO) with optional timeout if\nthe queue is empty.\n<p><code>timeout</code> … &mdash; "],["show","Hoodoo::Services::Implementation","classes/Hoodoo/Services/Implementation.html#method-i-show","( context )","<p>Implement a “show” action (represent one existing resource instance).\n<p><code>context</code> &mdash; Hoodoo::Services::Context …\n\n"],["show","Hoodoo::Services::Middleware::Endpoint","classes/Hoodoo/Services/Middleware/Endpoint.html#method-i-show","( ident, query_hash = nil )","<p>Obtain a resource instance representation.\n<p><code>ident</code> &mdash; See #initialize.\n<p><code>query_hash</code> &mdash; See #initialize.\n"],["sort","Hoodoo::Services::Interface::ToListDSL","classes/Hoodoo/Services/Interface/ToListDSL.html#method-i-sort","( sort )","<p>Specify extra sort keys and orders that add with whatever platform common\ndefaults are already in place. …\n"],["spare_port","Hoodoo::Utilities","classes/Hoodoo/Utilities.html#method-c-spare_port","()","<p>Return a spare TCP port on localhost. This is free at the instant of\ncalling, though of course if you …\n"],["start","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-c-start","()","<p>Start the DRb server. Does not return (joins the DRb thread). If the server\nis already running, expect …\n"],["start","Rack::Server","classes/Rack/Server.html#method-c-start","( options = nil )","<p>Part of the Rack monkey patch. See ::start_and_record_host_and_port.\n<p><code>options</code> &mdash; See ::start_and_record_host_and_port …\n\n"],["start_and_record_host_and_port","Rack::Server","classes/Rack/Server.html#method-c-start_and_record_host_and_port","( options = nil )","<p>Part of the Rack monkey patch. See file “rack_monkey_path.rb”&#39;s\ndocumentation for details. …\n"],["stop","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-i-stop","()","<p>Shut down this DRb service.\n"],["store","Hoodoo::Services::Session::MockDalliClient","classes/Hoodoo/Services/Session/MockDalliClient.html#method-c-store","()","<p>For test analysis, return the hash of &#39;memcached&#39; mock data.\n<p>Entries are referenced by the key …\n"],["string","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-string","(name, options = {})","<p>Define a JSON string with the supplied name and options Params\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> &mdash; A <code>Hash</code> of options, …\n"],["stringify","Hoodoo::Utilities","classes/Hoodoo/Utilities.html#method-c-stringify","(obj)","<p>The keys-to-strings equivalent of ::symbolize.\n<p><code>obj</code> &mdash; Hash or Array of Hashes. Will recursively convert keys …\n\n"],["symbolize","Hoodoo::Utilities","classes/Hoodoo/Utilities.html#method-c-symbolize","(obj)","<p>Given a hash, returns the same hash with keys converted to symbols. Works\nwith nested hashes. Taken from: …\n"],["sync?","Hoodoo::Communicators::Pool::QueueEntry","classes/Hoodoo/Communicators/Pool/QueueEntry.html#method-i-sync-3F","()","<p>Returns <code>true</code> if this queue entry represents a request to push\na message onto the processing Thread&#39;s …\n"],["tags","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-tags","( field_name, options = nil )","<p>Declares that this Type or Resource has a string field of unlimited length\nthat contains comma-separated …\n"],["terminate","Hoodoo::Communicators::Pool","classes/Hoodoo/Communicators/Pool.html#method-i-terminate","( per_instance_timeout: THREAD_EXIT_TIMEOUT )","<p>The communication pool is “emptied” by this call, going back to a clean\nstate as if just initialised. …\n"],["terminate?","Hoodoo::Communicators::Pool::QueueEntry","classes/Hoodoo/Communicators/Pool/QueueEntry.html#method-i-terminate-3F","()","<p>Returns <code>true</code> if encountering this queue entry should terminate\nthe processing thread, else <code>false</code> (see …\n"],["test_session","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-c-test_session","()","<p>A Hoodoo::Services::Session instance to use for tests or when no local\nMemcached instance is known about …\n"],["text","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-text","(name, options = {})","<p>Define a JSON string of unlimited length with the supplied name and options\nParams\n<p><code>name</code> &mdash; The JSON key\n<p><code>options</code> … &mdash; "],["to_create","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-to_create","( &block )","<p>Optional description of the JSON parameters (schema) that the\ninterface&#39;s implementation requires …\n"],["to_h","Hoodoo::Services::Permissions","classes/Hoodoo/Services/Permissions.html#method-i-to_h","()","<p>Return a Hash representative of this permissions object, which can be\nstored elsewhere, used to initialise …\n"],["to_h","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-to_h","()","<p>Represent this session&#39;s data as a Hash, for uses such as storage in\nMemcached or loading into another …\n"],["to_integer?","Hoodoo::Utilities","classes/Hoodoo/Utilities.html#method-c-to_integer-3F","( value )","<p>Is a parameter convertable to an integer cleanly? Returns the integer value\nif so, else <code>nil</code>.\n<p><code>value</code> &mdash; Value …\n\n"],["to_list","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-to_list","( &block )","<p>Specify parameters related to common index parameters. The block contains\ncalls to the DSL described …\n"],["to_list","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-c-to_list","()","<p>A Hoodoo::Services::Interface::ToList instance describing the list\nparameters for the interface as a …\n"],["to_update","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-to_update","( &block )","<p>As #to_create, but applies when modifying existing resource instances. To\navoid repeating yourself, if …\n"],["translate_errors_from_other_resource","Hoodoo::Services::Middleware","classes/Hoodoo/Services/Middleware.html#method-i-translate_errors_from_other_resource","( errors )","<p>Take a Hoodoo::Errors instance constructed from, or obtained via a call to\nanother service (inter-resource …\n"],["type","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-type","( type_name, options = nil )","<p>Declare that a nested type of a given name is included at this point. This\nis only normally done within …\n"],["unjoin_and_unescape_commas","Hoodoo::Errors","classes/Hoodoo/Errors.html#method-i-unjoin_and_unescape_commas","( str )","<p>When reference data is specified for errors, the reference values are\nconcatenated together into a comma-separated …\n"],["update","Hoodoo::Services::Implementation","classes/Hoodoo/Services/Implementation.html#method-i-update","( context )","<p>Implement a “update” action (modify one existing resource instance).\n<p><code>context</code> &mdash; Hoodoo::Services::Context …\n\n"],["update","Hoodoo::Services::Middleware::AMQPLogMessage","classes/Hoodoo/Services/Middleware/AMQPLogMessage.html#method-i-update","( options )","<p>Set public attribute values according to an options hash keyed on the\nattributes defined for the class. …\n"],["update","Hoodoo::Services::Middleware::Endpoint","classes/Hoodoo/Services/Middleware/Endpoint.html#method-i-update","( ident, body_hash, query_hash = nil )","<p>Update a resource instance.\n<p><code>ident</code> &mdash; See #initialize.\n<p><code>body_hash</code> &mdash; See #initialize.\n"],["update_caller_version_in_memcached","Hoodoo::Services::Session","classes/Hoodoo/Services/Session.html#method-i-update_caller_version_in_memcached","( cid, cv, mclient = nil )","<p>Update the version of a given Caller in Memcached. This is done\nautomatically when Sessions are saved …\n"],["update_same_as_create","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-update_same_as_create","()","<p>Declares that the expected JSON fields described in a #to_create call are\nthe same as those required …\n"],["uri","Hoodoo::Services::Middleware::ServiceRegistryDRbServer","classes/Hoodoo/Services/Middleware/ServiceRegistryDRbServer.html#method-c-uri","()","<p>URI for DRb server used during local machine development as a registry of\nservice endpoints. Whichever …\n"],["uri_path_components=","Hoodoo::Services::Request","classes/Hoodoo/Services/Request.html#method-i-uri_path_components-3D","( ary )","<p>Set the array returned by #uri_path_components and record the first element\nin the value returned by …\n"],["uuid","Hoodoo::Presenters::BaseDSL","classes/Hoodoo/Presenters/BaseDSL.html#method-i-uuid","( field_name, options = nil )","<p>Declares that this Type or Resource _refers to_ another Resource instance\nvia its UUID. There&#39;s no …\n"],["valid?","Hoodoo::UUID","classes/Hoodoo/UUID.html#method-c-valid-3F","( uuid )","<p>Checks if a UUID string is valid. Returns <code>true</code> if so, else\n<code>false</code>.\n<p><code>uuid</code> &mdash; UUID string to validate. Must be …\n\n"],["validate","Hoodoo::Presenters::Array","classes/Hoodoo/Presenters/Array.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Array and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Base","classes/Hoodoo/Presenters/Base.html#method-c-validate","( data, as_resource = false )","<p>Is the given rendering of a resource valid? Returns an array of Error\nPrimitive types (as hashes); this …\n"],["validate","Hoodoo::Presenters::Boolean","classes/Hoodoo/Presenters/Boolean.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Boolean and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Date","classes/Hoodoo/Presenters/Date.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Date and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::DateTime","classes/Hoodoo/Presenters/DateTime.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Datetime and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Decimal","classes/Hoodoo/Presenters/Decimal.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Decimal and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Enum","classes/Hoodoo/Presenters/Enum.html#method-i-validate","(data, path = '')","<p>Check if data is a valid String and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Field","classes/Hoodoo/Presenters/Field.html#method-i-validate","(data, path = '')","<p>Check if data is required and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Float","classes/Hoodoo/Presenters/Float.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Float and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Hash","classes/Hoodoo/Presenters/Hash.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Hash and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Integer","classes/Hoodoo/Presenters/Integer.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Integer and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Object","classes/Hoodoo/Presenters/Object.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Object and return a Hoodoo::Errors instance with\nzero (valid) or more (has validation …\n"],["validate","Hoodoo::Presenters::String","classes/Hoodoo/Presenters/String.html#method-i-validate","(data, path = '')","<p>Check if data is a valid String and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::Text","classes/Hoodoo/Presenters/Text.html#method-i-validate","(data, path = '')","<p>Check if data is a valid String and return a Hoodoo::Errors instance\n"],["validate","Hoodoo::Presenters::UUID","classes/Hoodoo/Presenters/UUID.html#method-i-validate","(data, path = '')","<p>Check if data is a valid UUID and return a Hoodoo::Errors instance\n"],["validate_each","UuidValidator","classes/UuidValidator.html#method-i-validate_each","( record, attribute, value )","<p>Any field this validator is applied to is considered valid if it is\n<code>nil</code> or a valid UUID. In the case …\n"],["verify","Hoodoo::Services::Implementation","classes/Hoodoo/Services/Implementation.html#method-i-verify","( context, action )","<p>Optional verification to allow or deny authorisation for a particular\naction on a call-by-call basis. …\n"],["version","Hoodoo::Services::Interface","classes/Hoodoo/Services/Interface.html#method-i-version","( major_version )","<p>Declare the <em>major</em> version of the interface being implemented. All\nservice endpoints appear at “/v{version}/{endpoint}” …\n"],["wait","Hoodoo::Communicators::Pool","classes/Hoodoo/Communicators/Pool.html#method-i-wait","( per_instance_timeout: THREAD_WAIT_TIMEOUT, communicator: nil )","<p>This method is only useful if there are any Hoodoo::Communicators::Slow\nsubclass instances in the communication …\n"],["wait","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-wait","()","<p>Wait for all writers to finish writing all log messages sent up to the\npoint of calling. Internal default …\n"],["wait","Hoodoo::Services::Middleware::ExceptionReporting","classes/Hoodoo/Services/Middleware/ExceptionReporting.html#method-c-wait","( timeout = 5 )","<p>Wait for all executing reporter threads to catch up before continuing.\n<p><code>timeout</code> &mdash; Optional timeout wait delay …\n\n"],["warn","Hoodoo::Logger","classes/Hoodoo/Logger.html#method-i-warn","( *args )","<p>Write a <code>warn</code> log message, provided the log level is\n<code>:debug</code>, <code>:info</code> or <code>:warn</code>.\n<p>The logging data is unstructured, …\n"],["README","","files/README_md.html","","<p>Hoodoo\n<p><img\nsrc=\"https://magnum.travis-ci.com/LoyaltyNZ/hoodoo.svg?token=qenLSjTyBsExZFCraVut&branch=master\">\n…\n"]]}}