var search_data = {"index":{"searchIndex":["apitools","jsonerrors","jsonpayload","logger","platformcontext","platformerrors","presenters","array","basepresenter","boolean","date","datetime","decimal","field","float","integer","object","string","add_error()","array()","boolean()","check_platform_context()","clear_errors()","date()","datetime()","debug()","decimal()","error()","fail_forbidden()","fail_not_found()","fail_unauthorized()","fail_with_error()","fail_with_errors()","float()","full_path()","get_schema()","has_errors?()","info()","integer()","logger()","logger=()","new()","new()","new()","new()","object()","platform_context_prefix()","process_json_payload()","property()","string()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","warn()"],"longSearchIndex":["apitools","apitools::jsonerrors","apitools::jsonpayload","apitools::logger","apitools::platformcontext","apitools::platformerrors","apitools::presenters","apitools::presenters::array","apitools::presenters::basepresenter","apitools::presenters::boolean","apitools::presenters::date","apitools::presenters::datetime","apitools::presenters::decimal","apitools::presenters::field","apitools::presenters::float","apitools::presenters::integer","apitools::presenters::object","apitools::presenters::string","apitools::platformerrors#add_error()","apitools::presenters::object#array()","apitools::presenters::object#boolean()","apitools::platformcontext#check_platform_context()","apitools::platformerrors#clear_errors()","apitools::presenters::object#date()","apitools::presenters::object#datetime()","apitools::logger::debug()","apitools::presenters::object#decimal()","apitools::logger::error()","apitools::jsonerrors#fail_forbidden()","apitools::jsonerrors#fail_not_found()","apitools::jsonerrors#fail_unauthorized()","apitools::jsonerrors#fail_with_error()","apitools::jsonerrors#fail_with_errors()","apitools::presenters::object#float()","apitools::presenters::field#full_path()","apitools::presenters::basepresenter::get_schema()","apitools::platformerrors#has_errors?()","apitools::logger::info()","apitools::presenters::object#integer()","apitools::logger::logger()","apitools::logger::logger=()","apitools::presenters::decimal::new()","apitools::presenters::field::new()","apitools::presenters::object::new()","apitools::presenters::string::new()","apitools::presenters::object#object()","apitools::platformcontext#platform_context_prefix()","apitools::jsonpayload#process_json_payload()","apitools::presenters::object#property()","apitools::presenters::object#string()","apitools::presenters::array#validate()","apitools::presenters::basepresenter::validate()","apitools::presenters::boolean#validate()","apitools::presenters::date#validate()","apitools::presenters::datetime#validate()","apitools::presenters::decimal#validate()","apitools::presenters::field#validate()","apitools::presenters::float#validate()","apitools::presenters::integer#validate()","apitools::presenters::object#validate()","apitools::presenters::string#validate()","apitools::logger::warn()"],"info":[["ApiTools","","ApiTools.html","",""],["ApiTools::JsonErrors","","ApiTools/JsonErrors.html","","<p>A module intended as a sinatra extension, providing standard error\nfunctionality for  Platform APIs. …\n"],["ApiTools::JsonPayload","","ApiTools/JsonPayload.html","","<p>A module intended as a sinatra extension, providing standard JSON parsing\nto the  `@payload` instance …\n"],["ApiTools::Logger","","ApiTools/Logger.html","","<p>A class intended as a standardised API/service logger. The class acts as a\nproxy, an external logger …\n"],["ApiTools::PlatformContext","","ApiTools/PlatformContext.html","","<p>A module intended as a sinatra extension, providing standard platform\ncontext to  the API.\n"],["ApiTools::PlatformErrors","","ApiTools/PlatformErrors.html","","<p>A module intended as a generic error handler for an instance of a class. \nProvides multiple error capability …\n"],["ApiTools::Presenters","","ApiTools/Presenters.html","",""],["ApiTools::Presenters::Array","","ApiTools/Presenters/Array.html","",""],["ApiTools::Presenters::BasePresenter","","ApiTools/Presenters/BasePresenter.html","","<p>A class intended as base functionality for presenter layers in sinatra\nservices.  Although Parsing and …\n"],["ApiTools::Presenters::Boolean","","ApiTools/Presenters/Boolean.html","",""],["ApiTools::Presenters::Date","","ApiTools/Presenters/Date.html","",""],["ApiTools::Presenters::DateTime","","ApiTools/Presenters/DateTime.html","",""],["ApiTools::Presenters::Decimal","","ApiTools/Presenters/Decimal.html","",""],["ApiTools::Presenters::Field","","ApiTools/Presenters/Field.html","",""],["ApiTools::Presenters::Float","","ApiTools/Presenters/Float.html","",""],["ApiTools::Presenters::Integer","","ApiTools/Presenters/Integer.html","",""],["ApiTools::Presenters::Object","","ApiTools/Presenters/Object.html","",""],["ApiTools::Presenters::String","","ApiTools/Presenters/String.html","",""],["add_error","ApiTools::PlatformErrors","ApiTools/PlatformErrors.html#method-i-add_error","(code, message, reference = nil)","<p>Add an error with the specified `code`, `message`, and optionally\n`reference`  to the error list.\n"],["array","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-array","(name, options = {})",""],["boolean","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-boolean","(name, options = {})",""],["check_platform_context","ApiTools::PlatformContext","ApiTools/PlatformContext.html#method-i-check_platform_context","()","<p>Get the platform context from the `X-Subscriber-ID` and `X-Programme-ID`\nHTTP headers into the `@platform_context` …\n"],["clear_errors","ApiTools::PlatformErrors","ApiTools/PlatformErrors.html#method-i-clear_errors","()","<p>Clear all errors.\n"],["date","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-date","(name, options = {})",""],["datetime","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-datetime","(name, options = {})",""],["debug","ApiTools::Logger","ApiTools/Logger.html#method-c-debug","(*args)","<p>Write to the DEBUG log.\n"],["decimal","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-decimal","(name, options = {})",""],["error","ApiTools::Logger","ApiTools/Logger.html#method-c-error","(*args)","<p>Write to the ERROR log.\n"],["fail_forbidden","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_forbidden","()","<p>`halt` the API call immediately, returning `403 Forbidden` and rendering\nany  previously added errors …\n"],["fail_not_found","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_not_found","()","<p>`halt` the API call immediately, returning `404 Not Found` and rendering\nany  previously added errors …\n"],["fail_unauthorized","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_unauthorized","()","<p>`halt` the API call immediately, returning `401 Unauthorized` and rendering\nany  previously added errors …\n"],["fail_with_error","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_with_error","(status, code, message, reference = nil)","<p>`halt` the API call immediately, returning the supplied HTTP `status` code,\nand render any previously …\n"],["fail_with_errors","ApiTools::JsonErrors","ApiTools/JsonErrors.html#method-i-fail_with_errors","(status = 422, errors = nil)","<p>halt` the API call immediately, returning the supplied HTTP `status` code, \nwith any previously added …\n"],["float","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-float","(name, options = {})",""],["full_path","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-full_path","(path)",""],["get_schema","ApiTools::Presenters::BasePresenter","ApiTools/Presenters/BasePresenter.html#method-c-get_schema","()",""],["has_errors?","ApiTools::PlatformErrors","ApiTools/PlatformErrors.html#method-i-has_errors-3F","()","<p>Return `true` if errors have been added.\n"],["info","ApiTools::Logger","ApiTools/Logger.html#method-c-info","(*args)","<p>Write to the INFO log.\n"],["integer","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-integer","(name, options = {})",""],["logger","ApiTools::Logger","ApiTools/Logger.html#method-c-logger","()","<p>Return the current logger, or `nil` if undefined.\n"],["logger=","ApiTools::Logger","ApiTools/Logger.html#method-c-logger-3D","(logger)","<p>Set the current logger.  Params:\n<p>logger &mdash; The logger to use.\n\n"],["new","ApiTools::Presenters::Decimal","ApiTools/Presenters/Decimal.html#method-c-new","(name, options = {})","<p>Check if data is a valid Decimal and return either [], or an array with a\nsuitable error\n"],["new","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-c-new","(name, options = {})",""],["new","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-c-new","(name = nil, options = {})",""],["new","ApiTools::Presenters::String","ApiTools/Presenters/String.html#method-c-new","(name, options = {})",""],["object","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-object","(name, options = {}, &block)",""],["platform_context_prefix","ApiTools::PlatformContext","ApiTools/PlatformContext.html#method-i-platform_context_prefix","()","<p>Return a string of the format `&lt;subscriber_id&gt;:&lt;programme_id&gt;:`\n"],["process_json_payload","ApiTools::JsonPayload","ApiTools/JsonPayload.html#method-i-process_json_payload","()","<p>Process the request body as JSON, and place a `Hash` of the parsed\nstructure  in the `@payload` instance …\n"],["property","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-property","(name, type, options = {}, &block)",""],["string","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-string","(name, options = {})",""],["validate","ApiTools::Presenters::Array","ApiTools/Presenters/Array.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Array and return either [], or an array with a\nsuitable error\n"],["validate","ApiTools::Presenters::BasePresenter","ApiTools/Presenters/BasePresenter.html#method-c-validate","(data)",""],["validate","ApiTools::Presenters::Boolean","ApiTools/Presenters/Boolean.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Boolean and return either [], or an array with a\nsuitable error\n"],["validate","ApiTools::Presenters::Date","ApiTools/Presenters/Date.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Date and return either [], or an array with a\nsuitable error\n"],["validate","ApiTools::Presenters::DateTime","ApiTools/Presenters/DateTime.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Datetime and return either [], or an array with a\nsuitable error\n"],["validate","ApiTools::Presenters::Decimal","ApiTools/Presenters/Decimal.html#method-i-validate","(data, path = '')",""],["validate","ApiTools::Presenters::Field","ApiTools/Presenters/Field.html#method-i-validate","(data, path = '')","<p>Check if data is required and return either [], or an array with a suitable\nerror\n"],["validate","ApiTools::Presenters::Float","ApiTools/Presenters/Float.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Float and return either [], or an array with a\nsuitable error\n"],["validate","ApiTools::Presenters::Integer","ApiTools/Presenters/Integer.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Integer and return either [], or an array with a\nsuitable error\n"],["validate","ApiTools::Presenters::Object","ApiTools/Presenters/Object.html#method-i-validate","(data, path = '')","<p>Check if data is a valid Object and return either [], or an array with a\nsuitable error\n"],["validate","ApiTools::Presenters::String","ApiTools/Presenters/String.html#method-i-validate","(data, path = '')","<p>Check if data is a valid String and return either [], or an array with a\nsuitable error\n"],["warn","ApiTools::Logger","ApiTools/Logger.html#method-c-warn","(*args)","<p>Write to the WARN log.\n"]]}}